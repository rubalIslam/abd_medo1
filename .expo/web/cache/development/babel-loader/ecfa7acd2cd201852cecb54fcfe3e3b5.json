{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\MyApp.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as SecureStore from 'expo-secure-store';\nimport Welcome from \"./screens/Welcome\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SignUpScreen from \"./screens/RegisterScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar MyApp = function MyApp() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  console.log(userInfo);\n  useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userInfo;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n            case 2:\n              userInfo = _context.sent;\n              console.log(userInfo);\n              setUserInfo(userInfo);\n              setIsLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, isLoading ? null : userInfo === null ? React.createElement(Stack.Navigator, {\n    name: \"authstack\",\n    initialRouteName: \"Welcome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Welcome\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(Welcome, {\n      userInfo: userInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }\n    });\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(SignUpScreen, {\n      userInfo: userInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }\n    });\n  }), React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(SignInScreen, {\n      userInfo: userInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 22\n      }\n    });\n  })) : userInfo ? React.createElement(Stack.Navigator, {\n    name: \"userstack\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, console.log(userInfo), React.createElement(Stack.Screen, {\n    name: \"Tab\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, function () {\n    return React.createElement(Tab.Navigator, {\n      name: \"Main\",\n      tabBarOptions: {\n        activeTintColor: \"black\",\n        inactiveTintColor: \"white\",\n        style: {\n          backgroundColor: \"#F1485C\"\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"MainScreen\",\n      options: {\n        tabBarLabel: \"MainScreen\",\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n              size = _ref.size;\n          return React.createElement(Ionicons, {\n            name: \"home\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"MainScreen\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(MainScreen, {\n          userInfo: userInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"ProductScreen\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(ProductScreen, {\n          userInfo: userInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 40\n          }\n        });\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"HomeScreen\",\n      options: {\n        tabBarLabel: \"HomeScreen\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return React.createElement(Ionicons, {\n            name: \"HomeScreen\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"HomeScreen\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(HomeScreen, {\n          userInfo: userInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 31\n          }\n        });\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Profile\",\n      options: {\n        tabBarLabel: \"Profile\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return React.createElement(Ionicons, {\n            name: \"profile\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Profile\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(ProfileScreen, {\n          userInfo: userInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 31\n          }\n        });\n      }));\n    }));\n  })) : null);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/MyApp.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","Ionicons","SecureStore","Welcome","SignInScreen","SignUpScreen","MainScreen","HomeScreen","ProductScreen","ProfileScreen","AsyncStorage","Drawer","Tab","Stack","MyApp","isLoading","setIsLoading","userInfo","setUserInfo","console","log","bootstrapAsync","getItem","header","animationEnabled","activeTintColor","inactiveTintColor","style","backgroundColor","tabBarLabel","tabBarIcon","color","size"],"mappings":"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","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n//import AuthScreen from './components/auth';\r\nimport Welcome from \"./screens/Welcome\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport SignUpScreen from \"./screens/RegisterScreen\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n/*\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n*/\r\nconst MyApp = () => {\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    console.log(userInfo)\r\n    //const setUserInfo =\r\n\r\n    useEffect(() => {\r\n        // Fetch the token from storage then navigate to our appropriate place\r\n        const bootstrapAsync = async () => {\r\n          // We should also handle error for production apps\r\n          const userInfo = await AsyncStorage.getItem(\"userInfo\");\r\n          //const userInfo = await SecureStore.getItemAsync(\"userInfo\");\r\n          console.log(userInfo);\r\n          //const userToken = await SecureStore.getItemAsync(\"userToken\");\r\n          //const adminToken = await SecureStore.getItemAsync(\"adminToken\");\r\n    \r\n          // This will switch to the App screen or Auth screen and this loading\r\n          // screen will be unmounted and thrown away.\r\n          //userInfo ? setUserInfo(userInfo):setUserInfo(null)\r\n          setUserInfo(userInfo)\r\n          setIsLoading(false);\r\n        };\r\n    \r\n        bootstrapAsync();\r\n      }, []);\r\n   \r\n    //const [auth, setAuth ] = useState(\"true\")\r\n\r\n        return (\r\n            <NavigationContainer>\r\n            { isLoading ? null : userInfo === null ? ( // We haven't finished checking for the token yet\r\n          // No token found, user isn't signed in\r\n          <Stack.Navigator\r\n            name=\"authstack\"\r\n          initialRouteName=\"Welcome\">\r\n            <Stack.Screen\r\n              name=\"Welcome\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <Welcome userInfo={userInfo}/>}\r\n            </Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"SignUp\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <SignUpScreen userInfo={userInfo}/>}\r\n            </Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"SignIn\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <SignInScreen userInfo={userInfo}/>}\r\n            </Stack.Screen>\r\n{/*\r\n            <Stack.Screen\r\n              name=\"AdminLogin\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <AdminLogin setAdminId={setAdminId} setAdminToken={setAdminToken} />}\r\n            </Stack.Screen>\r\n            */}\r\n            {/*\r\n              adminToken !== null ? (\r\n                <Stack.Screen\r\n                  name=\"Tab\"\r\n                  options={{ header: () => null, animationEnabled: false }}\r\n                >\r\n                  {\r\n                    () => (\r\n                      <Tab.Navigator\r\n                      >\r\n                        <Tab.Screen\r\n                          name=\"Dashboard\"\r\n                          options={{ header: () => null, animationEnabled: false }}\r\n                        >\r\n                          {() => (\r\n                            <Stack.Navigator>\r\n                              <Stack.Screen\r\n                                name=\"Dashboard\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Dashboard />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"YoutubeDownloader\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <YoutubeDownloader />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"Engineers\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Engineers />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"EditEngineers\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <EditEngineers />}\r\n                              </Stack.Screen>\r\n                            </Stack.Navigator>\r\n                          )}\r\n                        </Tab.Screen>\r\n                        <Tab.Screen\r\n                          name=\"AdminProfile\"\r\n                          options={{ header: () => null, animationEnabled: false }}\r\n                        >\r\n                          {() => (\r\n                            <Stack.Navigator>\r\n                              <Stack.Screen\r\n                                name=\"AdminProfile\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <AdminProfile setAdminId={setadminId} setadminToken={setadminToken}/>}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"Room\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Room />}\r\n                              </Stack.Screen>\r\n                            </Stack.Navigator>\r\n                          )}\r\n                        </Tab.Screen>\r\n                      </Tab.Navigator>\r\n                    )\r\n                  }\r\n                </Stack.Screen>\r\n              ) : null\r\n                */}\r\n          </Stack.Navigator>\r\n        ) : (\r\n            // User is signed in\r\n            userInfo ? (\r\n            <Stack.Navigator\r\n              name=\"userstack\"\r\n            >\r\n              {console.log(userInfo)}\r\n              <Stack.Screen\r\n                name=\"Tab\"\r\n                options={{ header: () => null, animationEnabled: false }}\r\n              >\r\n                {() => (\r\n                  <Tab.Navigator\r\n                    name=\"Main\"\r\n                    tabBarOptions={{\r\n                      activeTintColor: \"black\",\r\n                      inactiveTintColor: \"white\",\r\n                      style: {\r\n                        backgroundColor: \"#F1485C\"\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Tab.Screen\r\n                      name=\"MainScreen\"\r\n                      options={{\r\n                        tabBarLabel: \"MainScreen\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons name={\"home\"} size={size} color={color} />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                                name=\"MainScreen\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <MainScreen userInfo={userInfo}/>}\r\n                          </Stack.Screen>\r\n\r\n\r\n                          <Stack.Screen\r\n                                name=\"ProductScreen\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <ProductScreen userInfo={userInfo}/>}\r\n                          </Stack.Screen>\r\n{/*                          <Stack.Screen\r\n                            name=\"Home\"\r\n                            options={{\r\n                              title: \"List\",\r\n                              tabBarLabel: \"Home\",\r\n                              headerStyle: { backgroundColor: \"#F1485C\" },\r\n                              headerTitleStyle: { color: \"white\" },\r\n                              headerTitleAlign: \"center\"\r\n                            }}\r\n                          >\r\n                            {() => <HomeScreen userId={userId} userToken={userToken} name={name}/>}\r\n                          </Stack.Screen>\r\n*/}\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n                    \r\n\r\n                    <Tab.Screen\r\n                      name=\"HomeScreen\"\r\n                      options={{\r\n                        tabBarLabel: \"HomeScreen\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons\r\n                            name={\"HomeScreen\"}\r\n                            size={size}\r\n                            color={color}\r\n                          />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                            name=\"HomeScreen\"\r\n                            options={{ header: () => null, animationEnabled: false }}\r\n                          >\r\n                            {() => (\r\n                              <HomeScreen userInfo={userInfo}/>\r\n                            )}\r\n                          </Stack.Screen>\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n\r\n                    <Tab.Screen\r\n                      name=\"Profile\"\r\n                      options={{\r\n                        tabBarLabel: \"Profile\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons\r\n                            name={\"profile\"}\r\n                            size={size}\r\n                            color={color}\r\n                          />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                            name=\"Profile\"\r\n                            options={{ header: () => null, animationEnabled: false }}\r\n                          >\r\n                            {() => (\r\n                              <ProfileScreen userInfo={userInfo}/>\r\n                            )}\r\n                          </Stack.Screen>\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n                  </Tab.Navigator>\r\n                )}\r\n              </Stack.Screen>\r\n            </Stack.Navigator>\r\n            ):null\r\n          )}\r\n          </NavigationContainer>\r\n        )\r\n}\r\n\r\n//const mapStateToProps = state => ({ auth: state.auth })\r\n//export default connect(mapStateToProps)(MyApp);\r\nexport default MyApp;\r\n\r\n"]},"metadata":{},"sourceType":"module"}