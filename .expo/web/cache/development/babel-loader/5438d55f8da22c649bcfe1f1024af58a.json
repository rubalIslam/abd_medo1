{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport axios from \"axios\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from \"../actions/userActions\";\nexport default function SingUpScreen(_ref) {\n  var setToken = _ref.setToken,\n      setId = _ref.setId;\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var dispatch = useDispatch();\n  var userRegister = useSelector(function (state) {\n    return state.userRegister;\n  });\n  var loading = userRegister.loading,\n      error = userRegister.error,\n      userInfo = userRegister.userInfo;\n  useEffect(function () {\n    if (userInfo) {\n      console.log(\"push to main screen\");\n    }\n  }), [userInfo];\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (password !== confirmPassword) {\n              setMessage(\"Password and Confirm Password is not same!\");\n            } else {\n              console.log(\"passwordcorrect\");\n              dispatch(register(name, email, password));\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    bounces: false,\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 110,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, message && React.createElement(Text, {\n    style: {\n      color: \"red\",\n      paddingTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, message), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"If you dont have account, Please Register Here\"), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#E1E1E1\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Name\",\n    placeholderTextColor: \"#E1E1E1\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#E1E1E1\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"Confirm password\",\n    placeholderTextColor: \"#E1E1E1\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \" Register\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"SignIn\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.underButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Already have an account, SignIn\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inner: {\n    padding: 24,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 24,\n    color: \"white\",\n    marginVertical: 20\n  },\n  button: {\n    width: 190,\n    height: 65,\n    borderRadius: 50,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 24\n  },\n  underButton: {\n    marginTop: 15,\n    color: \"white\",\n    textDecorationLine: \"underline\"\n  },\n  textInput: {\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    width: 330,\n    height: 45,\n    marginBottom: 30,\n    paddingLeft: 15,\n    color: \"white\"\n  },\n  textArea: {\n    width: 330,\n    height: 80,\n    borderColor: \"white\",\n    borderWidth: 1,\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    textAlignVertical: \"top\",\n    color: \"white\",\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","useNavigation","axios","ScrollView","KeyboardAwareScrollView","useDispatch","useSelector","register","SingUpScreen","setToken","setId","navigation","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","console","log","handleSubmit","styles","container","inner","color","paddingTop","title","textInput","text","button","buttonText","navigate","underButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","textAlign","fontSize","marginVertical","width","height","borderRadius","marginTop","textDecorationLine","borderBottomColor","borderBottomWidth","marginBottom","paddingLeft","textArea","borderColor","borderWidth","paddingHorizontal","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  SafeAreaView\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from \"../actions/userActions\";\r\n\r\nexport default function SingUpScreen({ setToken, setId }) {\r\n  const navigation = useNavigation();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()  \r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  useEffect(() => {\r\n      if(userInfo) {\r\n          console.log(\"push to main screen\")\r\n      }\r\n  }),[userInfo]\r\n\r\n  const handleSubmit = async () => {\r\n      //e.preventDefault()\r\n    if(password !== confirmPassword){\r\n        //alert(\"Password and Confirm Password is not same!\")\r\n        setMessage(\"Password and Confirm Password is not same!\")\r\n    }else{\r\n        console.log(\"passwordcorrect\")\r\n        dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView bounces={false} contentContainerStyle={styles.container}>\r\n      <KeyboardAwareScrollView extraScrollHeight={110}>\r\n        <SafeAreaView>\r\n          <View style={styles.inner}>\r\n            {message && <Text style={{color:\"red\", paddingTop:20}}>{message}</Text>}\r\n            <Text style={styles.title}>If you dont have account, Please Register Here</Text>\r\n            <TextInput\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"#E1E1E1\"\r\n              onChangeText={text => setEmail(text)}\r\n            />\r\n            <TextInput\r\n              style={styles.textInput}\r\n              placeholder=\"Name\"\r\n              placeholderTextColor=\"#E1E1E1\"\r\n              onChangeText={text => setName(text)}\r\n            />\r\n            <TextInput\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#E1E1E1\"\r\n              secureTextEntry={true}\r\n              onChangeText={text => setPassword(text)}\r\n            />\r\n            <TextInput\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              placeholder=\"Confirm password\"\r\n              placeholderTextColor=\"#E1E1E1\"\r\n              secureTextEntry={true}\r\n              onChangeText={text => setConfirmPassword(text)}\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n              <Text style={styles.buttonText}> Register</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.navigate(\"SignIn\");\r\n              }}\r\n            >\r\n              <Text style={styles.underButton}>\r\n                Already have an account, SignIn\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </SafeAreaView>\r\n      </KeyboardAwareScrollView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inner: {\r\n    padding: 24,\r\n    flex: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  title: {\r\n    textAlign:\"center\",\r\n    fontSize: 24,\r\n    color: \"white\",\r\n    marginVertical: 20\r\n  },\r\n  button: {\r\n    width: 190,\r\n    height: 65,\r\n    borderRadius: 50,\r\n    backgroundColor: \"tomato\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  underButton: {\r\n    marginTop: 15,\r\n    color: \"white\",\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  textInput: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    width: 330,\r\n    height: 45,\r\n    marginBottom: 30,\r\n    paddingLeft: 15,\r\n    color: \"white\"\r\n  },\r\n  textArea: {\r\n    width: 330,\r\n    height: 80,\r\n    borderColor: \"white\",\r\n    borderWidth: 1,\r\n    paddingHorizontal: 15,\r\n    paddingTop: 15,\r\n    textAlignVertical: \"top\",\r\n    color: \"white\",\r\n    marginBottom: 20\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}