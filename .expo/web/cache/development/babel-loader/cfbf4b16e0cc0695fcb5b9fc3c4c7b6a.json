{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport axios from \"axios\";\nimport ProductList from \"./ProductList\";\nimport SearchedProduct from \"./SearchedProducts\";\nimport Banner from \"../../Shared/Banner\";\nimport CategoryFilter from \"./CategoryFilter\";\nimport baseURL from \"../../assets/common/baseUrl\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n\nvar ProductContainer = function ProductContainer(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      productsFiltered = _useState4[0],\n      setProductsFiltered = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focus = _useState6[0],\n      setFocus = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categories = _useState8[0],\n      setCategories = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      productsCtg = _useState10[0],\n      setProductsCtg = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      active = _useState12[0],\n      setActive = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      initialState = _useState14[0],\n      setInitialState = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loading = _useState16[0],\n      setLoading = _useState16[1];\n\n  useFocusEffect(useCallback(function () {\n    setFocus(false);\n    setActive(-1);\n    axios.get(baseURL + \"products\").then(function (res) {\n      setProducts(res.data);\n      setProductsFiltered(res.data);\n      setProductsCtg(res.data);\n      setInitialState(res.data);\n      setLoading(false);\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n    });\n    axios.get(baseURL + \"categories\").then(function (res) {\n      setCategories(res.data);\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n    });\n    return function () {\n      setProducts([]);\n      setProductsFiltered([]);\n      setFocus();\n      setCategories([]);\n      setActive();\n      setInitialState();\n    };\n  }, []));\n\n  var searchProduct = function searchProduct(text) {\n    setProductsFiltered(products.filter(function (i) {\n      return i.name.toLowerCase().includes(text.toLowerCase());\n    }));\n  };\n\n  var openList = function openList() {\n    setFocus(true);\n  };\n\n  var onBlur = function onBlur() {\n    setFocus(false);\n  };\n\n  var changeCtg = function changeCtg(ctg) {\n    {\n      ctg === \"all\" ? [setProductsCtg(initialState), setActive(true)] : [setProductsCtg(products.filter(function (i) {\n        return i.category._id === ctg;\n      }), setActive(true))];\n    }\n  };\n\n  return React.createElement(React.Fragment, null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexWrap: \"wrap\",\n    backgroundColor: \"gainsboro\"\n  },\n  listContainer: {\n    height: height,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    flexWrap: \"wrap\",\n    backgroundColor: \"gainsboro\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default ProductContainer;","map":{"version":3,"sources":["E:/reactproj/easy_shop/mern-stack-ecommerce/easy-shop/Screens/Products/ProductContainer.js"],"names":["React","useState","useCallback","useFocusEffect","axios","ProductList","SearchedProduct","Banner","CategoryFilter","baseURL","Dimensions","get","height","ProductContainer","props","products","setProducts","productsFiltered","setProductsFiltered","focus","setFocus","categories","setCategories","productsCtg","setProductsCtg","active","setActive","initialState","setInitialState","loading","setLoading","then","res","data","catch","error","console","log","searchProduct","text","filter","i","name","toLowerCase","includes","openList","onBlur","changeCtg","ctg","category","_id","styles","StyleSheet","create","container","flexWrap","backgroundColor","listContainer","flex","flexDirection","alignItems","center","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  //ActivityIndicator,\r\n  //FlatList,\r\n  //ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\n//import { Container, Header, Icon, Item, Input, Text } from \"native-base\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\n//import baseUrl from \"../../assets/common/baseUrl\";\r\nimport axios from \"axios\";\r\n\r\nimport ProductList from \"./ProductList\";\r\nimport SearchedProduct from \"./SearchedProducts\";\r\nimport Banner from \"../../Shared/Banner\";\r\nimport CategoryFilter from \"./CategoryFilter\";\r\nimport baseURL from \"../../assets/common/baseUrl\";\r\n\r\nvar { height } = Dimensions.get(\"window\");\r\n\r\nconst ProductContainer = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [productsFiltered, setProductsFiltered] = useState([]);\r\n  const [focus, setFocus] = useState();\r\n  const [categories, setCategories] = useState([]);\r\n  const [productsCtg, setProductsCtg] = useState([]);\r\n  const [active, setActive] = useState();\r\n  const [initialState, setInitialState] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      setFocus(false);\r\n      setActive(-1);\r\n\r\n      // Products\r\n      axios\r\n        .get(`${baseURL}products`)\r\n        .then((res) => {\r\n          setProducts(res.data);\r\n          setProductsFiltered(res.data);\r\n          setProductsCtg(res.data);\r\n          setInitialState(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Api call error\");\r\n        });\r\n\r\n      // Categories\r\n      axios\r\n        .get(`${baseURL}categories`)\r\n        .then((res) => {\r\n          setCategories(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Api call error\");\r\n        });\r\n\r\n      return () => {\r\n        setProducts([]);\r\n        setProductsFiltered([]);\r\n        setFocus();\r\n        setCategories([]);\r\n        setActive();\r\n        setInitialState();\r\n      };\r\n    }, [])\r\n  );\r\n\r\n  // Product Methods\r\n  const searchProduct = (text) => {\r\n    setProductsFiltered(\r\n      products.filter((i) => i.name.toLowerCase().includes(text.toLowerCase()))\r\n    );\r\n  };\r\n\r\n  const openList = () => {\r\n    setFocus(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setFocus(false);\r\n  };\r\n\r\n  // Categories\r\n  const changeCtg = (ctg) => {\r\n    {\r\n      ctg === \"all\"\r\n        ? [setProductsCtg(initialState), setActive(true)]\r\n        : [\r\n            setProductsCtg(\r\n              products.filter((i) => i.category._id === ctg),\r\n              setActive(true)\r\n            ),\r\n          ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*\r\n      {loading == false ? (\r\n        <Text>Product</Text>\r\n        \r\n        <Container>\r\n          <Header searchBar rounded>\r\n            <Item>\r\n              <Icon name=\"ios-search\" />\r\n              <Input\r\n                placeholder=\"Search\"\r\n                onFocus={openList}\r\n                onChangeText={(text) => searchProduct(text)}\r\n              />\r\n              {focus == true ? (\r\n                <Icon onPress={onBlur} name=\"ios-close\" />\r\n              ) : null}\r\n            </Item>\r\n          </Header>\r\n          \r\n          {focus == true ? (\r\n            <SearchedProduct\r\n              navigation={props.navigation}\r\n              productsFiltered={productsFiltered}\r\n            />\r\n          ) : (\r\n            <ScrollView>\r\n              <View>\r\n                <View>\r\n                  <Banner />\r\n                </View>\r\n                <View>\r\n                  <CategoryFilter\r\n                    categories={categories}\r\n                    categoryFilter={changeCtg}\r\n                    productsCtg={productsCtg}\r\n                    active={active}\r\n                    setActive={setActive}\r\n                  />\r\n                </View>\r\n                {productsCtg.length > 0 ? (\r\n                  <View style={styles.listContainer}>\r\n                    {productsCtg.map((item) => {\r\n                      return (\r\n                        <ProductList\r\n                          navigation={props.navigation}\r\n                          key={item.name}\r\n                          item={item}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </View>\r\n                ) : (\r\n                  <View style={[styles.center, { height: height / 2 }]}>\r\n                    <Text>No products found</Text>\r\n                  </View>\r\n                )}\r\n                \r\n              </View>\r\n            </ScrollView>\r\n          )}\r\n          \r\n        </Container>\r\n        \r\n      ) : (\r\n        // Loading\r\n        <Container style={[styles.center, { backgroundColor: \"#f2f2f2\" }]}>\r\n          <ActivityIndicator size=\"large\" color=\"red\" />\r\n        </Container>\r\n        \r\n      )}\r\n      */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexWrap: \"wrap\",\r\n    backgroundColor: \"gainsboro\",\r\n  },\r\n  listContainer: {\r\n    height: height,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    flexWrap: \"wrap\",\r\n    backgroundColor: \"gainsboro\",\r\n  },\r\n  center: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default ProductContainer;\r\n"]},"metadata":{},"sourceType":"module"}