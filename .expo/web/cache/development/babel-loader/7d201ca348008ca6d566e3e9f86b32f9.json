{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from \"../constants/orderConstants\";\nimport { logout } from \"./userActions\";\nimport baseURL from \"../../assets/common/baseUrl\";\nexport var createOrder = function createOrder(order) {\n  return function _callee(dispatch, getState) {\n    var _getState, userInfo, config, _await$axios$post, data, message;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: ORDER_CREATE_REQUEST\n            });\n            _getState = getState(), userInfo = _getState.userLogin.userInfo;\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(baseURL + \"orders\", order, config));\n\n          case 6:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n            dispatch({\n              type: ORDER_CREATE_SUCCESS,\n              payload: data\n            });\n            _context.next = 16;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            message = _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_CREATE_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var getOrderDetails = function getOrderDetails(id) {\n  return function _callee2(dispatch, getState) {\n    var _getState2, userInfo, config, _await$axios$get, data, message;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            dispatch({\n              type: ORDER_DETAILS_REQUEST\n            });\n            _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(baseURL + \"orders/\" + id, config));\n\n          case 6:\n            _await$axios$get = _context2.sent;\n            data = _await$axios$get.data;\n            dispatch({\n              type: ORDER_DETAILS_SUCCESS,\n              payload: data\n            });\n            _context2.next = 16;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            message = _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_DETAILS_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var payOrder = function payOrder(orderId, paymentResult) {\n  return function _callee3(dispatch, getState) {\n    var _getState3, userInfo, config, _await$axios$put, data, message;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dispatch({\n              type: ORDER_PAY_REQUEST\n            });\n            _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(\"/api/orders/\" + orderId + \"/pay\", paymentResult, config));\n\n          case 6:\n            _await$axios$put = _context3.sent;\n            data = _await$axios$put.data;\n            dispatch({\n              type: ORDER_PAY_SUCCESS,\n              payload: data\n            });\n            _context3.next = 16;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            message = _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_PAY_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var deliverOrder = function deliverOrder(order) {\n  return function _callee4(dispatch, getState) {\n    var _getState4, userInfo, config, _await$axios$put2, data, message;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            dispatch({\n              type: ORDER_DELIVER_REQUEST\n            });\n            _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(\"/api/orders/\" + order._id + \"/deliver\", {}, config));\n\n          case 6:\n            _await$axios$put2 = _context4.sent;\n            data = _await$axios$put2.data;\n            dispatch({\n              type: ORDER_DELIVER_SUCCESS,\n              payload: data\n            });\n            _context4.next = 16;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            message = _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_DELIVER_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var listMyOrders = function listMyOrders() {\n  return function _callee5(dispatch, getState) {\n    var _getState5, userInfo, config, _await$axios$get2, data, message;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            dispatch({\n              type: ORDER_LIST_MY_REQUEST\n            });\n            _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(\"/api/orders/myorders\", config));\n\n          case 6:\n            _await$axios$get2 = _context5.sent;\n            data = _await$axios$get2.data;\n            dispatch({\n              type: ORDER_LIST_MY_SUCCESS,\n              payload: data\n            });\n            _context5.next = 16;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            message = _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_LIST_MY_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var listOrders = function listOrders() {\n  return function _callee6(dispatch, getState) {\n    var _getState6, userInfo, config, _await$axios$get3, data, message;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            dispatch({\n              type: ORDER_LIST_REQUEST\n            });\n            _getState6 = getState(), userInfo = _getState6.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context6.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(\"/api/orders\", config));\n\n          case 6:\n            _await$axios$get3 = _context6.sent;\n            data = _await$axios$get3.data;\n            dispatch({\n              type: ORDER_LIST_SUCCESS,\n              payload: data\n            });\n            _context6.next = 16;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](0);\n            message = _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: ORDER_LIST_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_DELIVER_FAIL","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","logout","baseURL","createOrder","order","dispatch","getState","type","userInfo","userLogin","config","headers","Authorization","token","post","data","payload","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\nimport baseURL from \"../../assets/common/baseUrl\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`${baseURL}orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${baseURL}orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}