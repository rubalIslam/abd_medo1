{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\components\\\\home\\\\articles\\\\index.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Card } from 'react-native-elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getArticles, getMoreArticles } from \"../../../store/actions\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadingMore = _useState2[0],\n      setLoadingMore = _useState2[1];\n\n  var articles = useSelector(function (state) {\n    return state.articles;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getArticles());\n  }, [dispatch]);\n\n  var renderCard = function renderCard() {\n    return articles.posts.map(function (item) {\n      return React.createElement(TouchableOpacity, {\n        key: item.id,\n        onLongPress: function onLongPress() {\n          return navigation.navigate('Article_screen', {\n            id: item.id,\n            postData: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(Card.Title, {\n        style: styles.cardTitle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, item.title)), React.createElement(Card.Divider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.cardText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, item.excerpt)));\n    });\n  };\n\n  var isCloseToBottom = function isCloseToBottom(_ref2) {\n    var layoutMeasurement = _ref2.layoutMeasurement,\n        contentOffset = _ref2.contentOffset,\n        contentSize = _ref2.contentSize;\n    var paddingToBottom = 50;\n    return layoutMeasurement.height + contentOffset.y >= contentSize.height - paddingToBottom;\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, \"redwire\"));\n};\n\nvar styles = StyleSheet.create({\n  cardTitle: {\n    fontSize: 20,\n    textAlign: 'left'\n  },\n  cardText: {\n    marginBottom: 10,\n    marginTop: 10\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/components/home/articles/index.js"],"names":["React","useEffect","useState","Card","useDispatch","useSelector","getArticles","getMoreArticles","HomeScreen","navigation","loadingMore","setLoadingMore","articles","state","dispatch","renderCard","posts","map","item","id","navigate","postData","styles","cardTitle","title","cardText","excerpt","isCloseToBottom","layoutMeasurement","contentOffset","contentSize","paddingToBottom","height","y","StyleSheet","create","fontSize","textAlign","marginBottom","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAOA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAqBC,eAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACIP,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,MAC1BQ,WAD0B;AAAA,MACdC,cADc;;AAEjC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACD,QAAV;AAAA,GAAN,CAA5B;AACA,MAAME,QAAQ,GAAGV,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAI;AACVa,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEP,CAACQ,QAAD,CAFO,CAAT;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WACfH,QAAQ,CAACI,KAAT,CAAeC,GAAf,CAAmB,UAACC,IAAD;AAAA,aACf,oBAAC,gBAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,QAAA,WAAW,EAAE;AAAA,iBAAKV,UAAU,CAACW,QAAX,CAAoB,gBAApB,EAAqC;AACnDD,YAAAA,EAAE,EAAED,IAAI,CAACC,EAD0C;AAEnDE,YAAAA,QAAQ,EAAEH;AAFyC,WAArC,CAAL;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEI,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOL,IAAI,CAACM,KAAZ,CADJ,CADJ,EAII,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IAAI,CAACQ,OADV,CALJ,CAPJ,CADe;AAAA,KAAnB,CADe;AAAA,GAAnB;;AAsBA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAAqD;AAAA,QAAnDC,iBAAmD,SAAnDA,iBAAmD;AAAA,QAAhCC,aAAgC,SAAhCA,aAAgC;AAAA,QAAjBC,WAAiB,SAAjBA,WAAiB;AACzE,QAAMC,eAAe,GAAG,EAAxB;AACA,WAAOH,iBAAiB,CAACI,MAAlB,GAA2BH,aAAa,CAACI,CAAzC,IACPH,WAAW,CAACE,MAAZ,GAAqBD,eADrB;AAEH,GAJD;;AAOA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFH,CADJ;AAMH,CA7CD;;AA+CA,IAAMT,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAC;AACNa,IAAAA,QAAQ,EAAC,EADH;AAENC,IAAAA,SAAS,EAAC;AAFJ,GADmB;AAK7BZ,EAAAA,QAAQ,EAAC;AACLa,IAAAA,YAAY,EAAC,EADR;AAELC,IAAAA,SAAS,EAAC;AAFL;AALoB,CAAlB,CAAf;AAWA,eAAe/B,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n    View, Text, \n    Button, ScrollView,\n    TouchableOpacity,StyleSheet ,\n    ActivityIndicator\n} from 'react-native';\nimport { Card } from 'react-native-elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getArticles,getMoreArticles } from '../../../store/actions';\n \nconst HomeScreen = ({navigation}) => {\n    const [loadingMore,setLoadingMore] = useState(false);\n    const articles = useSelector(state => state.articles);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(getArticles())\n    },[dispatch])\n\n\n    const renderCard = () => (\n        articles.posts.map((item)=>(\n            <TouchableOpacity\n                key={item.id}\n                onLongPress={()=> navigation.navigate('Article_screen',{\n                    id: item.id,\n                    postData: item\n                })}\n            >\n                <Card>\n                    <Card.Title style={styles.cardTitle}>\n                        <Text>{item.title}</Text>\n                    </Card.Title>\n                    <Card.Divider/>\n                    <Text style={styles.cardText}>\n                        {item.excerpt}\n                    </Text>\n                </Card>\n            </TouchableOpacity>\n        ))\n    )\n\n    const isCloseToBottom = ({layoutMeasurement, contentOffset, contentSize}) => {\n        const paddingToBottom = 50;\n        return layoutMeasurement.height + contentOffset.y >=\n        contentSize.height - paddingToBottom;\n    }\n\n\n    return(\n        <ScrollView\n        >\n           <Text>redwire</Text>\n        </ScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    cardTitle:{\n        fontSize:20,\n        textAlign:'left'\n    },\n    cardText:{\n        marginBottom:10,\n        marginTop:10\n    }\n})\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}