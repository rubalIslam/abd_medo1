{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\MyAppCopy.js\";\n\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as SecureStore from 'expo-secure-store';\nimport Welcome from \"./screens/Welcome\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SignUpScreen from \"./screens/RegisterScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { DrawerNavigator } from \"./StoneNavigator\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { Host } from 'react-native-portalize';\nimport { navigationRef } from \"./RootNavigation\";\nimport { urlRedirect } from \"./utils/Tools\";\nimport * as Linking from 'expo-linking';\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar MyAppCopy = function MyAppCopy() {\n  useEffect(function () {\n    Linking.addEventListener('url', function (event) {\n      urlRedirect(event.url);\n    }, [urlRedirect]);\n    Linking.getInitialURL().then(urlRedirect);\n    Linking.removeEventListener('url', function (event) {\n      urlRedirect(event.url);\n    }, [urlRedirect]);\n  }, [urlRedirect]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  console.log(userInfo);\n  return React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Host, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(DrawerNavigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Stone\")));\n};\n\nexport default MyAppCopy;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/MyAppCopy.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","Ionicons","SecureStore","Welcome","SignInScreen","SignUpScreen","MainScreen","HomeScreen","ProductScreen","ProfileScreen","DrawerNavigator","AsyncStorage","Host","navigationRef","urlRedirect","Linking","Tab","Stack","MyAppCopy","addEventListener","event","url","getInitialURL","then","removeEventListener","isLoading","setIsLoading","userInfo","setUserInfo","console","log","color"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,OAAOC,OAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AAGA,SAASC,eAAT;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,aAAT;AAEA,SAASC,WAAT;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AAEA,IAAMC,GAAG,GAAGhB,wBAAwB,EAApC;AACA,IAAMiB,KAAK,GAAGnB,oBAAoB,EAAlC;;AAGA,IAAMoB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBvB,EAAAA,SAAS,CAAC,YAAM;AAEdoB,IAAAA,OAAO,CAACI,gBAAR,CACE,KADF,EAEE,UAACC,KAAD,EAAW;AACTN,MAAAA,WAAW,CAACM,KAAK,CAACC,GAAP,CAAX;AACD,KAJH,EAKE,CAACP,WAAD,CALF;AAOAC,IAAAA,OAAO,CAACO,aAAR,GAAwBC,IAAxB,CAA6BT,WAA7B;AACAC,IAAAA,OAAO,CAACS,mBAAR,CACE,KADF,EAEE,UAACJ,KAAD,EAAW;AACTN,MAAAA,WAAW,CAACM,KAAK,CAACC,GAAP,CAAX;AACD,KAJH,EAKE,CAACP,WAAD,CALF;AAOD,GAjBQ,EAiBN,CAACA,WAAD,CAjBM,CAAT;;AADsB,kBAoBgBpB,QAAQ,CAAC,IAAD,CApBxB;AAAA;AAAA,MAoBZ+B,SApBY;AAAA,MAoBDC,YApBC;;AAAA,mBAqBYhC,QAAQ,CAAC,IAAD,CArBpB;AAAA;AAAA,MAqBbiC,QArBa;AAAA,MAqBHC,WArBG;;AAsBpBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,SACE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEd,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,CADF;AAQH,CAhCD;;AAiCA,eAAeb,SAAf","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as SecureStore from 'expo-secure-store';\r\n//import AuthScreen from './components/auth';\r\nimport Welcome from \"./screens/Welcome\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport SignUpScreen from \"./screens/RegisterScreen\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\nimport { DrawerNavigator } from './StoneNavigator';\r\n//import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AsyncStorage from \"@react-native-community/async-storage\"\r\nimport { Host } from 'react-native-portalize';\r\nimport { navigationRef } from './RootNavigation';\r\n\r\nimport { urlRedirect } from './utils/Tools';\r\nimport * as Linking from 'expo-linking';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nconst MyAppCopy = () => {\r\n  useEffect(() => {\r\n    // listen for new url events coming from Expo\r\n    Linking.addEventListener(\r\n      'url',\r\n      (event) => {\r\n        urlRedirect(event.url);\r\n      },\r\n      [urlRedirect],\r\n    );\r\n    Linking.getInitialURL().then(urlRedirect);\r\n    Linking.removeEventListener(\r\n      'url',\r\n      (event) => {\r\n        urlRedirect(event.url);\r\n      },\r\n      [urlRedirect],\r\n    );\r\n  }, [urlRedirect]);\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    console.log(userInfo)\r\n    //const setUserInfo =\r\n    return (\r\n      <NavigationContainer ref={navigationRef}>\r\n        <Host>\r\n          <DrawerNavigator/>\r\n          <Text style={{color:\"red\"}}>Stone</Text>\r\n        </Host>\r\n      </NavigationContainer>\r\n    )\r\n}\r\nexport default MyAppCopy;\r\n\r\n"]},"metadata":{},"sourceType":"module"}