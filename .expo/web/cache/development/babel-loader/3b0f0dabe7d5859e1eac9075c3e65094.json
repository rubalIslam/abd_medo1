{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\MyApp.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as SecureStore from 'expo-secure-store';\nimport AuthScreen from \"./components/auth\";\nimport VideoScreen from \"./components/home/videos\";\nimport HomeScreen from \"./components/home/articles\";\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar MyApp = function MyApp() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userInfo;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"userInfo\"));\n\n            case 2:\n              userInfo = _context.sent;\n              console.log(userInfo);\n              userInfo ? setUserInfo(userInfo) : setUserInfo(null);\n              setIsLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  var _useState5 = useState(\"true\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      auth = _useState6[0],\n      setAuth = _useState6[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, isLoading ? null : userInfo === null ? React.createElement(Stack.Navigator, {\n    initialRouteName: \"Welcome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Welcome\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(Welcome, {\n      setId: setId,\n      setToken: setToken,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }\n    });\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(SignUpScreen, {\n      setId: setId,\n      setToken: setToken,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }\n    });\n  }), React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(SignInScreen, {\n      setId: setId,\n      setToken: setToken,\n      setName: setName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }\n    });\n  }), React.createElement(Stack.Screen, {\n    name: \"AdminLogin\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, function () {\n    return React.createElement(AdminLogin, {\n      setAdminId: setAdminId,\n      setAdminToken: setAdminToken,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }\n    });\n  }), adminToken !== null ? React.createElement(Stack.Screen, {\n    name: \"Tab\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, function () {\n    return React.createElement(Tab.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"Dashboard\",\n      options: {\n        header: function header() {\n          return null;\n        },\n        animationEnabled: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Dashboard\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(Dashboard, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"YoutubeDownloader\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(YoutubeDownloader, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"Engineers\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(Engineers, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"EditEngineers\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(EditEngineers, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 40\n          }\n        });\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"AdminProfile\",\n      options: {\n        header: function header() {\n          return null;\n        },\n        animationEnabled: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"AdminProfile\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(AdminProfile, {\n          setAdminId: setadminId,\n          setadminToken: setadminToken,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"Room\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 31\n        }\n      }, function () {\n        return React.createElement(Room, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 40\n          }\n        });\n      }));\n    }));\n  }) : null) : React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Tab\",\n    options: {\n      header: function header() {\n        return null;\n      },\n      animationEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, function () {\n    return React.createElement(Tab.Navigator, {\n      tabBarOptions: {\n        activeTintColor: \"black\",\n        inactiveTintColor: \"white\",\n        style: {\n          backgroundColor: \"#F1485C\"\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, React.createElement(Tab.Screen, {\n      name: \"YoutubeDownloader\",\n      options: {\n        tabBarLabel: \"YoutubeDownloader\",\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n              size = _ref.size;\n          return React.createElement(Ionicons, {\n            name: \"home\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"FfmpegConverter\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(FfmpegConverter, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"YoutubeDownloader\",\n        options: {\n          header: function header() {\n            return null;\n          },\n          animationEnabled: false\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(YoutubeDownloader, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 40\n          }\n        });\n      }), React.createElement(Stack.Screen, {\n        name: \"Home\",\n        options: {\n          title: \"List\",\n          tabBarLabel: \"Home\",\n          headerStyle: {\n            backgroundColor: \"#F1485C\"\n          },\n          headerTitleStyle: {\n            color: \"white\"\n          },\n          headerTitleAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(HomeScreen, {\n          userId: userId,\n          userToken: userToken,\n          name: name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 36\n          }\n        });\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"HowToDownload\",\n      options: {\n        tabBarLabel: \"HowToDownload\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return React.createElement(Ionicons, {\n            name: \"HowToDownload\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"HowToDownload\",\n        options: {\n          title: \"HowToDownload\",\n          headerStyle: {\n            backgroundColor: \"#F1485C\"\n          },\n          headerTitleStyle: {\n            color: \"white\"\n          },\n          headerTitleAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(HowToDownload, {\n          setId: setId,\n          setToken: setToken,\n          setName: setname,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 31\n          }\n        });\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Profile\",\n      options: {\n        tabBarLabel: \"Profile\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return React.createElement(Ionicons, {\n            name: \"profile\",\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 27\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, function () {\n      return React.createElement(Stack.Navigator, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Profile\",\n        options: {\n          title: \"Profile\",\n          headerStyle: {\n            backgroundColor: \"#F1485C\"\n          },\n          headerTitleStyle: {\n            color: \"white\"\n          },\n          headerTitleAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 27\n        }\n      }, function () {\n        return React.createElement(ProfileScreen, {\n          setId: setId,\n          setToken: setToken,\n          setName: setname,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 31\n          }\n        });\n      }));\n    }));\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(MyApp);","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/MyApp.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","Ionicons","SecureStore","AuthScreen","VideoScreen","HomeScreen","Drawer","Tab","Stack","MyApp","isLoading","setIsLoading","userInfo","setUserInfo","bootstrapAsync","getItemAsync","console","log","auth","setAuth","header","animationEnabled","setId","setToken","setName","setAdminId","setAdminToken","adminToken","setadminId","setadminToken","activeTintColor","inactiveTintColor","style","backgroundColor","tabBarLabel","tabBarIcon","color","size","title","headerStyle","headerTitleStyle","headerTitleAlign","userId","userToken","name","setname","mapStateToProps","state"],"mappings":"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","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport AuthScreen from './components/auth';\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\n\r\nimport VideoScreen from './components/home/videos';\r\nimport HomeScreen from './components/home/articles';\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n/*\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n*/\r\nconst MyApp = () => {\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch the token from storage then navigate to our appropriate place\r\n        const bootstrapAsync = async () => {\r\n          // We should also handle error for production apps\r\n          const userInfo = await SecureStore.getItemAsync(\"userInfo\");\r\n          console.log(userInfo);\r\n          //const userToken = await SecureStore.getItemAsync(\"userToken\");\r\n          //const adminToken = await SecureStore.getItemAsync(\"adminToken\");\r\n    \r\n          // This will switch to the App screen or Auth screen and this loading\r\n          // screen will be unmounted and thrown away.\r\n          userInfo ? setUserInfo(userInfo):setUserInfo(null)\r\n          setIsLoading(false);\r\n        };\r\n    \r\n        bootstrapAsync();\r\n      }, []);\r\n   \r\n    const [auth, setAuth ] = useState(\"true\")\r\n\r\n        return (\r\n            <NavigationContainer>\r\n            { isLoading ? null : userInfo === null ? ( // We haven't finished checking for the token yet\r\n          // No token found, user isn't signed in\r\n          <Stack.Navigator initialRouteName=\"Welcome\">\r\n            <Stack.Screen\r\n              name=\"Welcome\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <Welcome setId={setId} setToken={setToken} />}\r\n            </Stack.Screen>\r\n\r\n            <Stack.Screen\r\n              name=\"SignUp\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <SignUpScreen setId={setId} setToken={setToken} />}\r\n            </Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"SignIn\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <SignInScreen setId={setId} setToken={setToken} setName={setName}/>}\r\n            </Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"AdminLogin\"\r\n              options={{ header: () => null, animationEnabled: false }}\r\n            >\r\n              {() => <AdminLogin setAdminId={setAdminId} setAdminToken={setAdminToken} />}\r\n            </Stack.Screen>\r\n            {\r\n              adminToken !== null ? (\r\n                <Stack.Screen\r\n                  name=\"Tab\"\r\n                  options={{ header: () => null, animationEnabled: false }}\r\n                >\r\n                  {\r\n                    () => (\r\n                      <Tab.Navigator\r\n                      >\r\n                        <Tab.Screen\r\n                          name=\"Dashboard\"\r\n                          options={{ header: () => null, animationEnabled: false }}\r\n                        >\r\n                          {() => (\r\n                            <Stack.Navigator>\r\n                              <Stack.Screen\r\n                                name=\"Dashboard\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Dashboard />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"YoutubeDownloader\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <YoutubeDownloader />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"Engineers\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Engineers />}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"EditEngineers\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <EditEngineers />}\r\n                              </Stack.Screen>\r\n                            </Stack.Navigator>\r\n                          )}\r\n                        </Tab.Screen>\r\n                        <Tab.Screen\r\n                          name=\"AdminProfile\"\r\n                          options={{ header: () => null, animationEnabled: false }}\r\n                        >\r\n                          {() => (\r\n                            <Stack.Navigator>\r\n                              <Stack.Screen\r\n                                name=\"AdminProfile\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <AdminProfile setAdminId={setadminId} setadminToken={setadminToken}/>}\r\n                              </Stack.Screen>\r\n                              <Stack.Screen\r\n                                name=\"Room\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <Room />}\r\n                              </Stack.Screen>\r\n                            </Stack.Navigator>\r\n                          )}\r\n                        </Tab.Screen>\r\n                      </Tab.Navigator>\r\n                    )\r\n                  }\r\n                </Stack.Screen>\r\n              ) : null\r\n            }\r\n          </Stack.Navigator>\r\n        ) : (\r\n            // User is signed in\r\n            <Stack.Navigator>\r\n              <Stack.Screen\r\n                name=\"Tab\"\r\n                options={{ header: () => null, animationEnabled: false }}\r\n              >\r\n                {() => (\r\n                  <Tab.Navigator\r\n                    tabBarOptions={{\r\n                      activeTintColor: \"black\",\r\n                      inactiveTintColor: \"white\",\r\n                      style: {\r\n                        backgroundColor: \"#F1485C\"\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Tab.Screen\r\n                      name=\"YoutubeDownloader\"\r\n                      options={{\r\n                        tabBarLabel: \"YoutubeDownloader\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons name={\"home\"} size={size} color={color} />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                                name=\"FfmpegConverter\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <FfmpegConverter />}\r\n                          </Stack.Screen>\r\n                          \r\n                          <Stack.Screen\r\n                                name=\"YoutubeDownloader\"\r\n                                options={{ header: () => null, animationEnabled: false }}\r\n                              >\r\n                                {() => <YoutubeDownloader />}\r\n                          </Stack.Screen>\r\n                          <Stack.Screen\r\n                            name=\"Home\"\r\n                            options={{\r\n                              title: \"List\",\r\n                              tabBarLabel: \"Home\",\r\n                              headerStyle: { backgroundColor: \"#F1485C\" },\r\n                              headerTitleStyle: { color: \"white\" },\r\n                              headerTitleAlign: \"center\"\r\n                            }}\r\n                          >\r\n                            {() => <HomeScreen userId={userId} userToken={userToken} name={name}/>}\r\n                          </Stack.Screen>\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n                    <Tab.Screen\r\n                      name=\"HowToDownload\"\r\n                      options={{\r\n                        tabBarLabel: \"HowToDownload\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons\r\n                            name={\"HowToDownload\"}\r\n                            size={size}\r\n                            color={color}\r\n                          />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                            name=\"HowToDownload\"\r\n                            options={{\r\n                              title: \"HowToDownload\",\r\n                              headerStyle: { backgroundColor: \"#F1485C\" },\r\n                              headerTitleStyle: { color: \"white\" },\r\n                              headerTitleAlign: \"center\"\r\n                            }}\r\n                          >\r\n                            {() => (\r\n                              <HowToDownload setId={setId} setToken={setToken} setName={setname}/>\r\n                            )}\r\n                          </Stack.Screen>\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n                    <Tab.Screen\r\n                      name=\"Profile\"\r\n                      options={{\r\n                        tabBarLabel: \"Profile\",\r\n                        tabBarIcon: ({ color, size }) => (\r\n                          <Ionicons\r\n                            name={\"profile\"}\r\n                            size={size}\r\n                            color={color}\r\n                          />\r\n                        )\r\n                      }}\r\n                    >\r\n                      {() => (\r\n                        <Stack.Navigator>\r\n                          <Stack.Screen\r\n                            name=\"Profile\"\r\n                            options={{\r\n                              title: \"Profile\",\r\n                              headerStyle: { backgroundColor: \"#F1485C\" },\r\n                              headerTitleStyle: { color: \"white\" },\r\n                              headerTitleAlign: \"center\"\r\n                            }}\r\n                          >\r\n                            {() => (\r\n                              <ProfileScreen setId={setId} setToken={setToken} setName={setname}/>\r\n                            )}\r\n                          </Stack.Screen>\r\n                        </Stack.Navigator>\r\n                      )}\r\n                    </Tab.Screen>\r\n                  </Tab.Navigator>\r\n                )}\r\n              </Stack.Screen>\r\n            </Stack.Navigator>\r\n          )}\r\n          </NavigationContainer>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth })\r\nexport default connect(mapStateToProps)(MyApp);\r\n\r\n"]},"metadata":{},"sourceType":"module"}