{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\StoneNavigator.js\";\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons, AntDesign } from \"@expo/vector-icons\";\nimport * as SecureStore from \"expo-secure-store\";\nimport Welcome from \"./screens/Welcome\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SignUpScreen from \"./screens/RegisterScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport { login } from \"../actions/userActions\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar Stack = createStackNavigator();\nvar LoginStack = createStackNavigator();\nexport var LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(LoginStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    },\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"LoginScreen\",\n    component: SignInScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }));\n};\nvar AuthStack = createStackNavigator();\nexport var AuthStackScreen = function AuthStackScreen() {\n  return React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\nvar HomeStack = createStackNavigator();\nexport var HomeStackScreen = function HomeStackScreen() {\n  return React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n};\nvar MainStack = createStackNavigator();\nexport var MainStackScreen = function MainStackScreen() {\n  return React.createElement(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, React.createElement(MainStack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"ProductScreen\",\n    component: ProductScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }));\n};\nvar ProfileStack = createStackNavigator();\nexport var ProfileStackScreen = function ProfileStackScreen() {\n  return React.createElement(ProfileStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }));\n};\nvar Tab = createBottomTabNavigator();\nexport var TabScreen = function TabScreen() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var iconName;\n          var color = focused ? \"green\" : \"grey\";\n\n          if (route.name === \"HomeTab\") {\n            iconName = \"logout\";\n          } else if (route.name === \"MainTab\") {\n            iconName = \"home\";\n          } else if (route.name === \"Cart\") {\n            iconName = \"shoppingcart\";\n          } else if (route.name === \"ProfileTab\") {\n            iconName = \"profile\";\n          }\n\n          return React.createElement(AntDesign, {\n            name: iconName,\n            size: 23,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    barStyle: {\n      backgroundColor: \"grey\",\n      height: 50,\n      justifyContent: \"center\"\n    },\n    activeColor: \"green\",\n    inactiveColor: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"MainTab\",\n    component: MainStackScreen,\n    options: {\n      tabBarLabel: \"Main\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"HomeTab\",\n    component: HomeStackScreen,\n    options: {\n      tabBarLabel: \"Logout\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ProfileTab\",\n    component: ProfileStackScreen,\n    options: {\n      tabBarLabel: \"Profile\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n};\nvar Drawer = createDrawerNavigator();\nexport var DrawerNavigator = function DrawerNavigator() {\n  var userLogin = useSelector(function (state) {\n    return state.userLogin.userInfo;\n  });\n  userLogin && console.log(\"userLogin\", userLogin[\"isAdmin\"]);\n  var user = \"\";\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      itemStyle: {\n        marginVertical: 3\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, userLogin && userLogin[\"token\"] && userLogin[\"isAdmin\"] == false ? React.createElement(Drawer.Screen, {\n    key: \"HomeTab\",\n    name: \"HomeTab\",\n    component: TabScreen,\n    options: function options() {\n      return {\n        title: function title(_ref3) {\n          var focused = _ref3.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }\n          }, \"Home\");\n        },\n        drawerIcon: function drawerIcon(_ref4) {\n          var focused = _ref4.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home-outline\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }) : React.createElement(Drawer.Screen, {\n    name: \"AuthStack1\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref5) {\n          var focused = _ref5.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }\n          }, \"Login\");\n        },\n        drawerIcon: function drawerIcon(_ref6) {\n          var focused = _ref6.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"login\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }), user == \"\" ? React.createElement(Drawer.Screen, {\n    name: \"AuthStack\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref7) {\n          var focused = _ref7.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }\n          }, \"Login\");\n        },\n        drawerIcon: function drawerIcon(_ref8) {\n          var focused = _ref8.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"login\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }) : React.createElement(Drawer.Screen, {\n    name: \"Welcome\",\n    component: Welcome,\n    options: function options() {\n      return {\n        title: function title(_ref9) {\n          var focused = _ref9.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }\n          }, \"Welcome\");\n        },\n        drawerIcon: function drawerIcon(_ref10) {\n          var focused = _ref10.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"welcome\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/StoneNavigator.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","MaterialCommunityIcons","AntDesign","SecureStore","Welcome","SignInScreen","SignUpScreen","MainScreen","HomeScreen","useDispatch","useSelector","ProductScreen","ProfileScreen","CartScreen","login","AsyncStorage","Stack","LoginStack","LoginStackScreen","headerShown","gestureEnabled","cardOverlayEnabled","AuthStack","AuthStackScreen","HomeStack","HomeStackScreen","MainStack","MainStackScreen","ProfileStack","ProfileStackScreen","Tab","TabScreen","route","tabBarIcon","focused","iconName","color","name","backgroundColor","height","justifyContent","tabBarLabel","Drawer","DrawerNavigator","userLogin","state","userInfo","console","log","user","itemStyle","marginVertical","title","fontSize","fontWeight","drawerIcon"],"mappings":"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","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n//import { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons, AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport * as SecureStore from \"expo-secure-store\";\r\n//import AuthScreen from './components/auth';\r\nimport Welcome from \"./screens/Welcome\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport SignUpScreen from \"./screens/RegisterScreen\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\n//import MainScreen from \"./screens/MainScreen\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport { login } from \"../actions/userActions\";\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\n//const Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n/*\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n*/\r\nconst LoginStack = createStackNavigator();\r\nexport const LoginStackScreen = () => (\r\n  <LoginStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n    }}\r\n    mode=\"modal\"\r\n  >\r\n    <LoginStack.Screen name=\"LoginScreen\" component={SignInScreen} />\r\n    {/*<LoginStack.Screen name='ForgetPwScreen' component={ForgetPwScreen} />*/}\r\n  </LoginStack.Navigator>\r\n);\r\n\r\nconst AuthStack = createStackNavigator();\r\nexport const AuthStackScreen = () => {\r\n  return (\r\n    <AuthStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <AuthStack.Screen name=\"LoginScreen\" component={LoginStackScreen} />\r\n    </AuthStack.Navigator>\r\n  );\r\n};\r\n\r\nconst HomeStack = createStackNavigator();\r\nexport const HomeStackScreen = () => (\r\n  <HomeStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <HomeStack.Screen\r\n      name=\"Home\"\r\n      component={HomeScreen}\r\n      //animationEnabled: false\r\n    />\r\n  </HomeStack.Navigator>\r\n);\r\nconst MainStack = createStackNavigator();\r\nexport const MainStackScreen = () => (\r\n  <MainStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <MainStack.Screen\r\n      name=\"Main\"\r\n      component={MainScreen}\r\n      //animationEnabled={false}\r\n    />\r\n    <MainStack.Screen\r\n      name=\"ProductScreen\"\r\n      component={ProductScreen}\r\n      //animationEnabled=\"false\"\r\n    />\r\n  </MainStack.Navigator>\r\n);\r\n\r\nconst ProfileStack = createStackNavigator();\r\nexport const ProfileStackScreen = () => (\r\n  <ProfileStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <ProfileStack.Screen\r\n      name=\"Profile\"\r\n      component={ProfileScreen}\r\n      //animationEnabled={false}\r\n    />\r\n  </ProfileStack.Navigator>\r\n);\r\n\r\nconst Tab = createBottomTabNavigator();\r\nexport const TabScreen = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused }) => {\r\n          let iconName;\r\n          const color = focused ? \"green\" : \"grey\";\r\n          if (route.name === \"HomeTab\") {\r\n            iconName = \"logout\";\r\n          } else if (route.name === \"MainTab\") {\r\n            iconName = \"home\";\r\n          } else if (route.name === \"Cart\") {\r\n            iconName = \"shoppingcart\";\r\n          } else if (route.name === \"ProfileTab\") {\r\n            iconName = \"profile\";\r\n          }\r\n          return <AntDesign name={iconName} size={23} color={color} />;\r\n        },\r\n      })}\r\n      barStyle={{\r\n        backgroundColor: \"grey\",\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n      }}\r\n      activeColor={\"green\"}\r\n      inactiveColor={\"grey\"}\r\n    >\r\n      <Tab.Screen\r\n        name=\"MainTab\"\r\n        component={MainStackScreen}\r\n        options={{\r\n          tabBarLabel: \"Main\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"HomeTab\"\r\n        component={HomeStackScreen}\r\n        options={{\r\n          tabBarLabel: \"Logout\",\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"ProfileTab\"\r\n        component={ProfileStackScreen}\r\n        options={{\r\n          tabBarLabel: \"Profile\",\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst Drawer = createDrawerNavigator();\r\nexport const DrawerNavigator = () => {\r\n  //const user = useSelector((state) => state.auth.user);\r\n  const userLogin = useSelector((state) => state.userLogin.userInfo)\r\n  userLogin &&\r\n  console.log(\"userLogin\",userLogin[\"isAdmin\"])\r\n  \r\n  const user = \"\";\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContentOptions={{\r\n        itemStyle: { marginVertical: 3 },\r\n      }}\r\n    >\r\n        \r\n        {/*\r\n          userLogin && userLogin[\"token\"] && userLogin[\"isAdmin\"] == false ? (\r\n        <Drawer.Screen\r\n            key=\"HomeTab\"\r\n            name=\"HomeTab\"\r\n            component={TabScreen}\r\n            options={() => ({\r\n            title: ({ focused }) => (\r\n                <Text\r\n                style={{\r\n                    fontSize: 14,\r\n                    fontWeight: \"500\",\r\n                    //fontFamily: \"Roboto-Medium\",\r\n                }}\r\n                >\r\n                Home\r\n                </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n                <MaterialCommunityIcons\r\n                name=\"home-outline\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n                />\r\n            ),\r\n            })}\r\n            \r\n        />\r\n        \r\n        ):null\r\n          */}\r\n      {\r\n          userLogin && userLogin[\"token\"] && userLogin[\"isAdmin\"] == false ? (\r\n        \r\n        <Drawer.Screen\r\n            key=\"HomeTab\"\r\n            name=\"HomeTab\"\r\n            component={TabScreen}\r\n            options={() => ({\r\n            title: ({ focused }) => (\r\n                <Text\r\n                style={{\r\n                    fontSize: 14,\r\n                    fontWeight: \"500\",\r\n                    //fontFamily: \"Roboto-Medium\",\r\n                }}\r\n                >\r\n                Home\r\n                </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n                <MaterialCommunityIcons\r\n                name=\"home-outline\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n                />\r\n            ),\r\n            })}\r\n            \r\n        />\r\n        \r\n        ):(\r\n          <Drawer.Screen\r\n          name=\"AuthStack1\"\r\n          component={AuthStackScreen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"500\",\r\n                  //fontFamily: \"Roboto-Medium\",\r\n                }}\r\n              >\r\n                Login\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"login\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n        )\r\n      }\r\n      {user == \"\" ? (\r\n        <Drawer.Screen\r\n          name=\"AuthStack\"\r\n          component={AuthStackScreen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"500\",\r\n                  //fontFamily: \"Roboto-Medium\",\r\n                }}\r\n              >\r\n                Login\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"login\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      ) : (\r\n        <Drawer.Screen\r\n          name=\"Welcome\"\r\n          component={Welcome}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"500\",\r\n                  //fontFamily: \"Roboto-Medium\",\r\n                }}\r\n              >\r\n                Welcome\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"welcome\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      )}\r\n      \r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}