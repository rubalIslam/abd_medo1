{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\SignInScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { login } from \"../actions/userActions\";\nexport default function SignInScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var loading = userLogin.loading,\n      error = userLogin.error,\n      userInfo = userLogin.userInfo;\n  useEffect(function () {\n    if (userInfo) {}\n  }, [userInfo]);\n\n  var handleSubmit = function handleSubmit(e) {\n    var today, dateTime, userMail;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            today = new Date();\n            dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            userMail = \"\";\n            e.preventDefault();\n            dispatch(login(email, password));\n\n            if (userInfo) {}\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 110,\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Login To Download\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"email\",\n    placeholderTextColor: \"#E1E1E1\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"password\",\n    placeholderTextColor: \"#E1E1E1\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.underButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Didnt have account! Register\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    width: 190,\n    height: 65,\n    borderRadius: 50,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 40,\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 24\n  },\n  underButton: {\n    marginTop: 15,\n    color: \"white\",\n    textDecorationLine: \"underline\"\n  },\n  textInput: {\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    width: 330,\n    height: 45,\n    marginBottom: 30,\n    color: \"white\"\n  },\n  form: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/SignInScreen.js"],"names":["React","useEffect","useState","useNavigation","useDispatch","useSelector","KeyboardAwareScrollView","login","SignInScreen","navigation","dispatch","userLogin","state","loading","error","userInfo","handleSubmit","e","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","userMail","preventDefault","email","password","setEmail","setPassword","styles","container","alignItems","loginText","form","textInput","text","button","buttonText","navigate","underButton","StyleSheet","create","flex","backgroundColor","justifyContent","width","height","borderRadius","marginTop","color","fontSize","fontWeight","textDecorationLine","borderBottomColor","borderBottomWidth","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n  StyleSheet,\r\n  SafeAreaView\r\n} from \"react-native\";\r\n//import { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n//import axios from \"axios\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n//import { firebase,firebaseLoggedInDetail,firebaseUsers } from \"../components/Firebase/firebase\";\r\nimport { login } from \"../actions/userActions\"\r\n \r\nexport default function SignInScreen({ }) {\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  //console.log(userLogin)\r\n\r\n  useEffect(() => {\r\n    if(userInfo) {\r\n     /*navigation.navigate(\"userstack\",{\r\n       screen:\"Tab\",params:{\r\n         screen:\"Main\",params:{\r\n          screen:\"MainScreen\"\r\n         }\r\n      }\r\n    })*/\r\n     //console.log(userInfo)\r\n    }\r\n  },[userInfo])\r\n\r\n  const handleSubmit = async (e) => {\r\n    //const loginToken;\r\n    //const loginId;\r\n    let today = new Date();\r\n    let dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    let userMail = \"\";\r\n    e.preventDefault()\r\n    dispatch(login(email,password))\r\n    if(userInfo) {\r\n      //navigation.navigate(\"MainScreen\")\r\n    //  console.log(userInfo)\r\n     }\r\n  };\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  return (\r\n    <KeyboardAwareScrollView\r\n      extraScrollHeight={110}\r\n      contentContainerStyle={styles.container}\r\n    >\r\n      <SafeAreaView style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.loginText}>Login To Download</Text>\r\n        <View style={styles.form}>\r\n          <TextInput\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            placeholder=\"email\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            onChangeText={text => setEmail(text)}\r\n            value={email}\r\n          />\r\n          <TextInput\r\n            style={styles.textInput}\r\n            placeholder=\"password\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={text => setPassword(text)}\r\n            value={password}\r\n          />\r\n          <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"SignUp\");\r\n            }}\r\n          >\r\n            <Text style={styles.underButton}>Didnt have account! Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  button: {\r\n    width: 190,\r\n    height: 65,\r\n    borderRadius: 50,\r\n    backgroundColor: \"tomato\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  },\r\n  loginText:{\r\n    color:\"white\",\r\n    fontSize:40,\r\n    fontWeight:\"bold\"\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  underButton: {\r\n    marginTop: 15,\r\n    color: \"white\",\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  textInput: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    width: 330,\r\n    height: 45,\r\n    marginBottom: 30,\r\n    color: \"white\"\r\n  },\r\n  form: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}