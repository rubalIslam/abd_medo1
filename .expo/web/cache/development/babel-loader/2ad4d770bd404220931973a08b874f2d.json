{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useDispatch } from \"react-redux\";\n\nvar ProductScreen = function ProductScreen(_ref) {\n  var productId = _ref.productId;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      qty = _useState2[0],\n      setQty = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rating = _useState4[0],\n      setRating = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comment = _useState6[0],\n      setComment = _useState6[1];\n\n  var dispatch = useDispatch();\n  var route = useRoute();\n  return React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"black\",\n      paddingTop: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Product Details\"), console.log(route.params.productId)));\n};\n\nexport default ProductScreen;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/ProductScreen.js"],"names":["React","useEffect","useState","useRoute","useDispatch","ProductScreen","productId","qty","setQty","rating","setRating","comment","setComment","dispatch","route","backgroundColor","paddingTop","color","console","log","params"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACjBJ,QAAQ,CAAC,CAAD,CADS;AAAA;AAAA,MAChCK,GADgC;AAAA,MAC3BC,MAD2B;;AAAA,mBAEXN,QAAQ,CAAC,CAAD,CAFG;AAAA;AAAA,MAEhCO,MAFgC;AAAA,MAExBC,SAFwB;;AAAA,mBAGTR,QAAQ,CAAC,EAAD,CAHC;AAAA;AAAA,MAGhCS,OAHgC;AAAA,MAGvBC,UAHuB;;AAKvC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAMU,KAAK,GAAGX,QAAQ,EAAtB;AAEA,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEY,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,UAAU,EAAE;AAAxC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGC,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,MAAN,CAAad,SAAzB,CAFH,CADF,CADF;AAQD,CAjBD;;AAmBA,eAAeD,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, TouchableOpacity,SafeAreaView,ScrollView } from \"react-native\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useDispatch } from \"react-redux\";\r\n//import { ScrollView } from \"react-native-gesture-handler\";\r\n\r\nconst ProductScreen = ({ productId }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const route = useRoute();\r\n\r\n  return (\r\n    <ScrollView style={{ backgroundColor: \"black\", paddingTop: 40 }}>\r\n      <SafeAreaView>\r\n        <Text style={{color:\"white\"}}>Product Details</Text>\r\n        {console.log(route.params.productId)}\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n"]},"metadata":{},"sourceType":"module"}