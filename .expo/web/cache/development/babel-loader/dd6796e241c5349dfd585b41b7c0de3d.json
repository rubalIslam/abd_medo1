{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\nexport default function ProfileScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var dispatch = useDispatch();\n  var userDetails = useSelector(function (state) {\n    return state.userDetails;\n  });\n  var loading = userDetails.loading,\n      error = userDetails.error,\n      user = userDetails.user;\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var userInfo = userLogin.userInfo;\n  var userUpdateProfile = useSelector(function (state) {\n    return state.userUpdateProfile;\n  });\n  var success = userUpdateProfile.success;\n  var orderListMy = useSelector(function (state) {\n    return state.orderListMy;\n  });\n  var loadingOrders = orderListMy.loading,\n      errorOrders = orderListMy.error,\n      orders = orderListMy.orders;\n  useEffect(function () {\n    if (!userInfo) {\n      navigation.navigate(\"SignIn\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders);\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, navigation, userInfo, user, success]);\n\n  var submitHandler = function submitHandler(e) {\n    if (password !== confirmPassword) {\n      setMessage(\"Password and confirmPassword do not match\");\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name: name,\n        email: email,\n        password: password\n      }));\n    }\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 110,\n    contentContainerStyle: styles.container,\n    style: {\n      backgroundColor: \"black\",\n      paddingTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"User Profile\"), message && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, message), success && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Profile Updated\"), loading ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Loading...\") : error ? React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, error) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"h\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: \"center\"\n  },\n  pageImage: {\n    textAlign: \"left\",\n    width: 400,\n    height: 500,\n    resizeMode: \"contain\",\n    paddingRight: 20,\n    margin: 0\n  },\n  button: {\n    width: 390,\n    height: 45,\n    margin: 0,\n    padding: 0,\n    borderRadius: 5,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  image: {\n    height: 140,\n    width: 140,\n    borderRadius: 70,\n    borderWidth: 2,\n    borderColor: \"#F35960\"\n  },\n  textInput: {\n    borderBottomColor: \"#F35960\",\n    borderBottomWidth: 1,\n    height: 45,\n    width: \"80%\",\n    paddingLeft: 15,\n    marginVertical: 20,\n    marginHorizontal: \"10%\"\n  },\n  textArea: {\n    borderWidth: 1,\n    borderColor: \"#F35960\",\n    width: \"80%\",\n    height: 80,\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    textAlignVertical: \"top\",\n    marginBottom: 20,\n    marginHorizontal: \"10%\",\n    borderRadius: 5\n  },\n  updateButton: {\n    width: 150,\n    height: 55,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#F35960\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  logoutButton: {\n    width: 150,\n    height: 55,\n    borderRadius: 50,\n    backgroundColor: \"#F35960\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  logoutButtonText: {\n    color: \"white\"\n  },\n  updateButtonText: {\n    color: \"#F35960\"\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useCallback","useRoute","useNavigation","AsyncStorage","KeyboardAwareScrollView","useDispatch","useSelector","USER_UPDATE_PROFILE_RESET","getUserDetails","updateUserProfile","listMyOrders","ProfileScreen","navigation","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","navigate","type","submitHandler","e","id","_id","styles","container","backgroundColor","paddingTop","color","StyleSheet","create","padding","alignItems","pageImage","textAlign","width","height","resizeMode","paddingRight","margin","button","borderRadius","justifyContent","marginTop","image","borderWidth","borderColor","textInput","borderBottomColor","borderBottomWidth","paddingLeft","marginVertical","marginHorizontal","textArea","paddingHorizontal","textAlignVertical","marginBottom","updateButton","logoutButton","logoutButtonText","updateButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  AsyncStorage,\r\n  Image,\r\n  ActivityIndicator,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TextInput,\r\n  Button,\r\n} from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nexport default function ProfileScreen({}) {\r\n  const navigation = useNavigation();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigation.navigate(\"SignIn\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders);\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, navigation, userInfo, user, success]);\r\n  const submitHandler = (e) => {\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password and confirmPassword do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAwareScrollView\r\n      extraScrollHeight={110}\r\n      contentContainerStyle={styles.container}\r\n      style={{ backgroundColor: \"black\", paddingTop: 40 }}\r\n    >\r\n        <SafeAreaView \r\n            //style={{ alignItems: \"center\" }}\r\n        >\r\n            <ScrollView >\r\n                <Text style={{ color: \"white\" }}>User Profile</Text>\r\n                {message && <Text>{message}</Text>}\r\n                {success && <Text>Profile Updated</Text>}\r\n                {\r\n                    loading?(\r\n                        <Text>Loading...</Text>\r\n                    ) : error ? (\r\n                        <Text>{error}</Text>\r\n                    ) : (\r\n                        <Text>h</Text>\r\n                    ) \r\n                }\r\n            </ScrollView>\r\n        </SafeAreaView>\r\n      \r\n    </KeyboardAwareScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n    // flex: 1\r\n  },\r\n  pageImage: {\r\n    //flex: 1,\r\n    textAlign: \"left\",\r\n    width: 400,\r\n    height: 500,\r\n    resizeMode: \"contain\",\r\n    paddingRight: 20,\r\n    margin: 0,\r\n  },\r\n  button: {\r\n    width: 390,\r\n    height: 45,\r\n    margin: 0,\r\n    padding: 0,\r\n    borderRadius: 5,\r\n    backgroundColor: \"tomato\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  image: {\r\n    height: 140,\r\n    width: 140,\r\n    borderRadius: 70,\r\n    borderWidth: 2,\r\n    borderColor: \"#F35960\",\r\n  },\r\n  textInput: {\r\n    borderBottomColor: \"#F35960\",\r\n    borderBottomWidth: 1,\r\n    height: 45,\r\n    width: \"80%\",\r\n    paddingLeft: 15,\r\n    marginVertical: 20,\r\n    marginHorizontal: \"10%\",\r\n  },\r\n  textArea: {\r\n    borderWidth: 1,\r\n    borderColor: \"#F35960\",\r\n    width: \"80%\",\r\n    height: 80,\r\n    paddingHorizontal: 15,\r\n    paddingTop: 15,\r\n    textAlignVertical: \"top\",\r\n    marginBottom: 20,\r\n    marginHorizontal: \"10%\",\r\n    borderRadius: 5,\r\n  },\r\n  updateButton: {\r\n    width: 150,\r\n    height: 55,\r\n    borderRadius: 50,\r\n    borderWidth: 1,\r\n    borderColor: \"#F35960\",\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  logoutButton: {\r\n    width: 150,\r\n    height: 55,\r\n    borderRadius: 50,\r\n    backgroundColor: \"#F35960\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  logoutButtonText: {\r\n    color: \"white\",\r\n  },\r\n  updateButtonText: {\r\n    color: \"#F35960\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}