{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nexport var SET_CURRENT_USER = \"SET_CURRENT_USER\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from \"@react-native-community/async-storage\";\nexport var login = function login(email, password) {\n  return function _callee(dispatch) {\n    var config, _await$axios$post, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch({\n              type: USER_LOGIN_REQUEST\n            });\n            config = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(baseURL + \"users/login\", {\n              email: email,\n              password: password\n            }, config));\n\n          case 5:\n            _await$axios$post = _context.sent;\n            data = _await$axios$post.data;\n            console.log(data);\n            dispatch({\n              type: USER_LOGIN_SUCCESS,\n              payload: data\n            });\n            AsyncStorage.setItem('userInfo', JSON.stringify(data));\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch({\n              type: USER_LOGIN_FAIL,\n              payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    AsyncStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n    dispatch({\n      type: ORDER_LIST_MY_RESET\n    });\n    dispatch({\n      type: USER_LIST_RESET\n    });\n  };\n};\nexport var register = function register(name, email, password) {\n  return function _callee2(dispatch) {\n    var config, _await$axios$post2, data;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            console.log(name + email + password);\n            dispatch({\n              type: USER_REGISTER_REQUEST\n            });\n            config = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            console.log(\"con\", config);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(baseURL + \"users\", {\n              name: name,\n              email: email,\n              password: password\n            }, config));\n\n          case 7:\n            _await$axios$post2 = _context2.sent;\n            data = _await$axios$post2.data;\n            dispatch({\n              type: USER_REGISTER_SUCCESS,\n              payload: data\n            });\n            dispatch({\n              type: USER_LOGIN_SUCCESS,\n              payload: data\n            });\n            _context2.prev = 11;\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userInfo', JSON.stringify(data)));\n\n          case 14:\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](11);\n            console.log(\"Err in async storage\", _context2.t0);\n\n          case 19:\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t1 = _context2[\"catch\"](0);\n            dispatch({\n              type: USER_REGISTER_FAIL,\n              payload: _context2.t1.response && _context2.t1.response.data.message ? _context2.t1.response.data.message : _context2.t1.message\n            });\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21], [11, 16]], Promise);\n  };\n};\nexport var getUserDetails = function getUserDetails(id) {\n  return function _callee3(dispatch, getState) {\n    var _getState, userInfo, config, _await$axios$get, data, message;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            dispatch({\n              type: USER_DETAILS_REQUEST\n            });\n            _getState = getState(), userInfo = _getState.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(baseURL + \"users/\" + id, config));\n\n          case 6:\n            _await$axios$get = _context3.sent;\n            data = _await$axios$get.data;\n            console.log(\"data\", data);\n            dispatch({\n              type: USER_DETAILS_SUCCESS,\n              payload: data\n            });\n            _context3.next = 17;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](0);\n            message = _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: USER_DETAILS_FAIL,\n              payload: message\n            });\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};\nexport var updateUserProfile = function updateUserProfile(user) {\n  return function _callee4(dispatch, getState) {\n    var _getState2, userInfo, config, _await$axios$put, data, message;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            dispatch({\n              type: USER_UPDATE_PROFILE_REQUEST\n            });\n            _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(baseURL + \"users/profile\", user, config));\n\n          case 6:\n            _await$axios$put = _context4.sent;\n            data = _await$axios$put.data;\n            dispatch({\n              type: USER_UPDATE_PROFILE_SUCCESS,\n              payload: data\n            });\n            dispatch({\n              type: USER_LOGIN_SUCCESS,\n              payload: data\n            });\n            AsyncStorage.setItem('userInfo', JSON.stringify(data));\n            _context4.next = 18;\n            break;\n\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](0);\n            message = _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: USER_UPDATE_PROFILE_FAIL,\n              payload: message\n            });\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n};\nexport var listUsers = function listUsers() {\n  return function _callee5(dispatch, getState) {\n    var _getState3, userInfo, config, _await$axios$get2, data, message;\n\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            dispatch({\n              type: USER_LIST_REQUEST\n            });\n            _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(axios.get(baseURL + \"users\", config));\n\n          case 6:\n            _await$axios$get2 = _context5.sent;\n            data = _await$axios$get2.data;\n            dispatch({\n              type: USER_LIST_SUCCESS,\n              payload: data\n            });\n            _context5.next = 16;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            message = _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: USER_LIST_FAIL,\n              payload: message\n            });\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\nexport var deleteUser = function deleteUser(id) {\n  return function _callee6(dispatch, getState) {\n    var _getState4, userInfo, config, message;\n\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            dispatch({\n              type: USER_DELETE_REQUEST\n            });\n            _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context6.next = 6;\n            return _regeneratorRuntime.awrap(axios.delete(baseURL + \"users/\" + id, config));\n\n          case 6:\n            dispatch({\n              type: USER_DELETE_SUCCESS\n            });\n            _context6.next = 14;\n            break;\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](0);\n            message = _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: USER_DELETE_FAIL,\n              payload: message\n            });\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n};\nexport var updateUser = function updateUser(user) {\n  return function _callee7(dispatch, getState) {\n    var _getState5, userInfo, config, _await$axios$put2, data, message;\n\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            dispatch({\n              type: USER_UPDATE_REQUEST\n            });\n            _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n            config = {\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: \"Bearer \" + userInfo.token\n              }\n            };\n            _context7.next = 6;\n            return _regeneratorRuntime.awrap(axios.put(baseURL + \"users/\" + user._id, user, config));\n\n          case 6:\n            _await$axios$put2 = _context7.sent;\n            data = _await$axios$put2.data;\n            dispatch({\n              type: USER_UPDATE_SUCCESS\n            });\n            dispatch({\n              type: USER_DETAILS_SUCCESS,\n              payload: data\n            });\n            _context7.next = 17;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](0);\n            message = _context7.t0.response && _context7.t0.response.data.message ? _context7.t0.response.data.message : _context7.t0.message;\n\n            if (message === 'Not authorized, token failed') {\n              dispatch(logout());\n            }\n\n            dispatch({\n              type: USER_UPDATE_FAIL,\n              payload: message\n            });\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_FAIL","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","ORDER_LIST_MY_RESET","SET_CURRENT_USER","baseURL","SecureStore","AsyncStorage","login","email","password","dispatch","type","config","headers","post","data","console","log","payload","setItem","JSON","stringify","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id","setCurrentUser","decoded","userProfile"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nimport baseURL from \"../../assets/common/baseUrl\";\nimport * as SecureStore from 'expo-secure-store';\n//import AsyncStorage from '@react-native-async-storage/async-storage';\nimport AsyncStorage from \"@react-native-community/async-storage\"\n\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      `${baseURL}users/login`,\n      { email, password },\n      config\n    )\n    console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    AsyncStorage.setItem('userInfo', JSON.stringify(data))\n    //await SecureStore.setItemAsync('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  AsyncStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    console.log(name+email+password)\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n    console.log(\"con\",config)\n\n    const { data } = await axios.post(\n      `${baseURL}users`,\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    //console.log(\"data\",data)\n    try {\n      await AsyncStorage.setItem('userInfo', JSON.stringify(data))\n    }catch(e) {\n      console.log(\"Err in async storage\",e)\n    }\n    //await SecureStore.setItemAsync('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${baseURL}users/${id}`, config)\n    console.log(\"data\",data)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`${baseURL}users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    AsyncStorage.setItem('userInfo', JSON.stringify(data))\n    //await SecureStore.setItemAsync('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`${baseURL}users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`${baseURL}users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`${baseURL}users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const setCurrentUser = (decoded, user) => {\n  return {\n      type: SET_CURRENT_USER,\n      payload: decoded,\n      userProfile: user\n  }\n}"]},"metadata":{},"sourceType":"module"}