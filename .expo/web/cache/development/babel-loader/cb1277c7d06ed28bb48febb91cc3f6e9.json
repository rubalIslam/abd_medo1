{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\StoneNavigator.js\";\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons, AntDesign } from \"@expo/vector-icons\";\nimport * as SecureStore from \"expo-secure-store\";\nimport Welcome from \"./screens/Welcome\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SignUpScreen from \"./screens/RegisterScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nvar Stack = createStackNavigator();\nvar LoginStack = createStackNavigator();\nexport var LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(LoginStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    },\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"LoginScreen\",\n    component: SignInScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n};\nvar AuthStack = createStackNavigator();\nexport var AuthStackScreen = function AuthStackScreen() {\n  return React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\nvar HomeStack = createStackNavigator();\nexport var HomeStackScreen = function HomeStackScreen() {\n  return React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }));\n};\nvar Tab = createBottomTabNavigator();\nexport var TabScreen = function TabScreen() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          var iconName;\n          var color = focused ? \"green\" : \"grey\";\n\n          if (route.name === \"HomeTab\") {\n            iconName = \"home\";\n          } else if (route.name === \"Favorite\") {\n            iconName = \"hearto\";\n          } else if (route.name === \"Cart\") {\n            iconName = \"shoppingcart\";\n          }\n\n          return React.createElement(AntDesign, {\n            name: iconName,\n            size: 23,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    barStyle: {\n      backgroundColor: \"grey\",\n      height: 50,\n      justifyContent: \"center\"\n    },\n    activeColor: \"green\",\n    inactiveColor: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"HomeTab\",\n    component: HomeStackScreen,\n    options: {\n      tabBarLabel: \"Home\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n};\nvar Drawer = createDrawerNavigator();\nexport var DrawerNavigator = function DrawerNavigator() {\n  var user = \"auth\";\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      itemStyle: {\n        marginVertical: 3\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    key: \"HomeTab\",\n    name: \"HomeTab\",\n    component: TabScreen,\n    options: function options() {\n      return {\n        title: function title(_ref3) {\n          var focused = _ref3.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\",\n              fontFamily: \"Roboto-Medium\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }\n          }, \"Home\");\n        },\n        drawerIcon: function drawerIcon(_ref4) {\n          var focused = _ref4.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home-outline\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), user === \"\" ? React.createElement(Drawer.Screen, {\n    name: \"SignUp\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref5) {\n          var focused = _ref5.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\",\n              fontFamily: \"Roboto-Medium\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }\n          }, \"Login\");\n        },\n        drawerIcon: function drawerIcon(_ref6) {\n          var focused = _ref6.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"login\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }) : React.createElement(Drawer.Screen, {\n    name: \"Welcome\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref7) {\n          var focused = _ref7.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: \"500\",\n              fontFamily: \"Roboto-Medium\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }\n          }, \"Welcome\");\n        },\n        drawerIcon: function drawerIcon(_ref8) {\n          var focused = _ref8.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"welcome\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), \")\");\n};","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/StoneNavigator.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","MaterialCommunityIcons","AntDesign","SecureStore","Welcome","SignInScreen","SignUpScreen","MainScreen","HomeScreen","ProductScreen","ProfileScreen","AsyncStorage","Stack","LoginStack","LoginStackScreen","headerShown","gestureEnabled","cardOverlayEnabled","AuthStack","AuthStackScreen","HomeStack","HomeStackScreen","Tab","TabScreen","route","tabBarIcon","focused","iconName","color","name","backgroundColor","height","justifyContent","tabBarLabel","Drawer","DrawerNavigator","user","itemStyle","marginVertical","title","fontSize","fontWeight","fontFamily","drawerIcon"],"mappings":"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","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n//import { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons, AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport * as SecureStore from \"expo-secure-store\";\r\n//import AuthScreen from './components/auth';\r\nimport Welcome from \"./screens/Welcome\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport SignUpScreen from \"./screens/RegisterScreen\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\n//import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\n//const Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n/*\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n*/\r\nconst LoginStack = createStackNavigator();\r\nexport const LoginStackScreen = () => (\r\n  <LoginStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n    }}\r\n    mode=\"modal\"\r\n  >\r\n    <LoginStack.Screen name=\"LoginScreen\" component={SignInScreen} />\r\n    {/*<LoginStack.Screen name='ForgetPwScreen' component={ForgetPwScreen} />*/}\r\n  </LoginStack.Navigator>\r\n);\r\n\r\nconst AuthStack = createStackNavigator();\r\nexport const AuthStackScreen = () => {\r\n  return (\r\n    <AuthStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <AuthStack.Screen name=\"LoginScreen\" component={LoginStackScreen} />\r\n    </AuthStack.Navigator>\r\n  );\r\n};\r\n\r\nconst HomeStack = createStackNavigator();\r\nexport const HomeStackScreen = () => (\r\n  <HomeStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n    }}\r\n  >\r\n    <HomeStack.Screen\r\n      name=\"Home\"\r\n      component={HomeScreen}\r\n      //animationEnabled: false\r\n    />\r\n  </HomeStack.Navigator>\r\n);\r\n\r\nconst Tab = createBottomTabNavigator();\r\nexport const TabScreen = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused }) => {\r\n          let iconName;\r\n          const color = focused ? \"green\" : \"grey\";\r\n          if (route.name === \"HomeTab\") {\r\n            iconName = \"home\";\r\n          } else if (route.name === \"Favorite\") {\r\n            iconName = \"hearto\";\r\n          } else if (route.name === \"Cart\") {\r\n            iconName = \"shoppingcart\";\r\n          }\r\n          return <AntDesign name={iconName} size={23} color={color} />;\r\n        },\r\n      })}\r\n      barStyle={{\r\n        backgroundColor: \"grey\",\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n      }}\r\n      activeColor={\"green\"}\r\n      inactiveColor={\"grey\"}\r\n    >\r\n      <Tab.Screen\r\n        name=\"HomeTab\"\r\n        component={HomeStackScreen}\r\n        options={{\r\n          tabBarLabel: \"Home\",\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst Drawer = createDrawerNavigator();\r\nexport const DrawerNavigator = () => {\r\n  //const user = useSelector((state) => state.auth.user);\r\n  const user = \"auth\";\r\n\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContentOptions={{\r\n        itemStyle: { marginVertical: 3 },\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        key=\"HomeTab\"\r\n        name=\"HomeTab\"\r\n        component={TabScreen}\r\n        options={() => ({\r\n          title: ({ focused }) => (\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                fontWeight: \"500\",\r\n                fontFamily: \"Roboto-Medium\",\r\n              }}\r\n            >\r\n              Home\r\n            </Text>\r\n          ),\r\n          drawerIcon: ({ focused }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"home-outline\"\r\n              size={23}\r\n              //color={focused ? Colors.lighter_green : Colors.grey}\r\n            />\r\n          ),\r\n        })}\r\n      />\r\n      {user === \"\" ? (\r\n        <Drawer.Screen\r\n          name=\"SignUp\"\r\n          component={AuthStackScreen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"500\",\r\n                  fontFamily: \"Roboto-Medium\",\r\n                }}\r\n              >\r\n                Login\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"login\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      ) : (\r\n        <Drawer.Screen\r\n          name=\"Welcome\"\r\n          component={AuthStackScreen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  fontSize: 14,\r\n                  fontWeight: \"500\",\r\n                  fontFamily: \"Roboto-Medium\",\r\n                }}\r\n              >\r\n                Welcome\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <MaterialCommunityIcons\r\n                name=\"welcome\"\r\n                size={23}\r\n                //color={focused ? Colors.lighter_green : Colors.grey}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      )}\r\n      )\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}