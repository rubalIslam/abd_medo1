{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\StoneNavigator.js\";\n\nimport React, { Component, useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { MaterialCommunityIcons, AntDesign } from '@expo/vector-icons';\nimport * as SecureStore from 'expo-secure-store';\nimport Welcome from \"./screens/Welcome\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SignUpScreen from \"./screens/RegisterScreen\";\nimport MainScreen from \"./screens/MainScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar LoginStack = createStackNavigator();\nexport var LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(LoginStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true,\n      cardOverlayEnabled: true\n    },\n    mode: \"modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"LoginScreen\",\n    component: SignInScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n};\nvar AuthStack = createStackNavigator();\nexport var AuthStackScreen = function AuthStackScreen() {\n  return React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\nvar Drawer = createDrawerNavigator();\nexport var DrawerNavigator = function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      itemStyle: {\n        marginVertical: 3\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    key: \"HomeTab\",\n    name: \"HomeTab\",\n    component: TabScreen,\n    options: function options() {\n      return {\n        title: function title(_ref) {\n          var focused = _ref.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: '500',\n              fontFamily: 'Roboto-Medium'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }\n          }, \"Home\");\n        },\n        drawerIcon: function drawerIcon(_ref2) {\n          var focused = _ref2.focused;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home-outline\",\n            size: 23,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"SignUp\",\n    component: AuthStackScreen,\n    options: function options() {\n      return {\n        title: function title(_ref3) {\n          var focused = _ref3.focused;\n          return React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: '500',\n              fontFamily: 'Roboto-Medium'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }\n          }, \"Login\");\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/StoneNavigator.js"],"names":["React","Component","useState","useEffect","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","MaterialCommunityIcons","AntDesign","SecureStore","Welcome","SignInScreen","SignUpScreen","MainScreen","HomeScreen","ProductScreen","ProfileScreen","AsyncStorage","Tab","Stack","LoginStack","LoginStackScreen","headerShown","gestureEnabled","cardOverlayEnabled","AuthStack","AuthStackScreen","Drawer","DrawerNavigator","itemStyle","marginVertical","TabScreen","title","focused","fontSize","fontWeight","fontFamily","drawerIcon"],"mappings":"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","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n//import { Ionicons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons, AntDesign } from '@expo/vector-icons';\r\n\r\nimport * as SecureStore from 'expo-secure-store';\r\n//import AuthScreen from './components/auth';\r\nimport Welcome from \"./screens/Welcome\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport SignUpScreen from \"./screens/RegisterScreen\";\r\nimport MainScreen from \"./screens/MainScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\n//import ProfileScreen from './components/user/profile/profile';\r\n//import { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\n//import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport AsyncStorage from \"@react-native-community/async-storage\"\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n/*\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n*/\r\nconst LoginStack = createStackNavigator();\r\nexport const LoginStackScreen = () => (\r\n  <LoginStack.Navigator\r\n    screenOptions={{\r\n      headerShown: false,\r\n      gestureEnabled: true,\r\n      cardOverlayEnabled: true,\r\n    }}\r\n    mode='modal'\r\n  >\r\n    <LoginStack.Screen name='LoginScreen' component={SignInScreen} />\r\n    {/*<LoginStack.Screen name='ForgetPwScreen' component={ForgetPwScreen} />*/}\r\n  </LoginStack.Navigator>\r\n);\r\n\r\n\r\nconst AuthStack = createStackNavigator();\r\nexport const AuthStackScreen = () => {\r\n\r\n    return(\r\n        <AuthStack.Navigator\r\n            screenOptions={{\r\n            headerShown:false\r\n            }}\r\n        >\r\n            <AuthStack.Screen name='LoginScreen' \r\n            component={LoginStackScreen}\r\n            />\r\n        </AuthStack.Navigator>\r\n    )\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\nexport const DrawerNavigator = () => {\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContentOptions={{\r\n        itemStyle: { marginVertical: 3 },\r\n      }}\r\n    >\r\n\r\n        <Drawer.Screen\r\n            key=\"HomeTab\"\r\n            name=\"HomeTab\"\r\n            component={TabScreen}\r\n            options={()=>({\r\n                title:({focused}) =>(\r\n                    <Text \r\n                        style={{\r\n                            fontSize:14,\r\n                            fontWeight: '500',\r\n                            fontFamily: 'Roboto-Medium',\r\n                        }}\r\n                    >\r\n                        Home\r\n                    </Text>\r\n                ),\r\n                drawerIcon: ({ focused }) => (\r\n                    <MaterialCommunityIcons\r\n                      name='home-outline'\r\n                      size={23}\r\n                      //color={focused ? Colors.lighter_green : Colors.grey}\r\n                    />\r\n                  ),\r\n            })}\r\n        />\r\n      <Drawer.Screen\r\n        name=\"SignUp\"\r\n        component={AuthStackScreen}\r\n        options={() => ({\r\n          title: ({ focused }) => (\r\n            <Text \r\n              style={{\r\n                fontSize:14,\r\n                fontWeight: '500',\r\n                fontFamily: 'Roboto-Medium',\r\n              }}\r\n            >\r\n              Login\r\n            </Text>\r\n          )\r\n        })}\r\n        />\r\n    </Drawer.Navigator>\r\n\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}