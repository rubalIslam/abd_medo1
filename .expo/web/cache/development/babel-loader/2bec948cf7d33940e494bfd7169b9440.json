{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\components\\\\auth\\\\index.js\";\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFocusEffect } from '@react-navigation/native';\n\nvar AuthScreen = function AuthScreen() {\n  var dispatch = useDispatch();\n  var error = useSelector(function (state) {\n    return state.auth.error;\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      formType = _useState2[0],\n      setFormType = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      securEntry = _useState4[0],\n      setSecurEntry = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var handleSubmit = function handleSubmit(values) {\n    setLoading(true);\n\n    if (formType) {\n      dispatch(registerUser(values));\n    } else {\n      dispatch(loginUser(values));\n    }\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flex: 1,\n    backgroundColor: \"tomato\"\n  },\n  container: {\n    padding: 50,\n    alignItems: 'center'\n  },\n  inputStyle: {\n    fontSize: 15,\n    color: \"white\"\n  },\n  inputContainerStyle: {\n    borderBottomWidth: 3,\n    borderBottomColor: \"black\"\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/components/auth/index.js"],"names":["React","useState","useCallback","useEffect","Yup","useDispatch","useSelector","useFocusEffect","AuthScreen","dispatch","error","state","auth","formType","setFormType","securEntry","setSecurEntry","loading","setLoading","handleSubmit","values","registerUser","loginUser","styles","contentContainer","container","StyleSheet","create","flex","backgroundColor","padding","alignItems","inputStyle","fontSize","color","inputContainerStyle","borderBottomWidth","borderBottomColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;;;;;AAGA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,QAA+B,0BAA/B;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAK;AACpB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAUA,MAAMK,KAAK,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,KAAf;AAAA,GAAN,CAAzB;;AAXoB,kBAYYT,QAAQ,CAAC,IAAD,CAZpB;AAAA;AAAA,MAYbY,QAZa;AAAA,MAYHC,WAZG;;AAAA,mBAagBb,QAAQ,CAAC,IAAD,CAbxB;AAAA;AAAA,MAaZc,UAbY;AAAA,MAaDC,aAbC;;AAAA,mBAcUf,QAAQ,CAAC,KAAD,CAdlB;AAAA;AAAA,MAcbgB,OAda;AAAA,MAcJC,UAdI;;AAgBpB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC7BF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAGL,QAAH,EAAY;AAERJ,MAAAA,QAAQ,CAACY,YAAY,CAACD,MAAD,CAAb,CAAR;AACH,KAHD,MAGO;AAEHX,MAAAA,QAAQ,CAACa,SAAS,CAACF,MAAD,CAAV,CAAR;AACH;AACJ,GATD;;AAWA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEG,MAAM,CAACC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADJ;AASH,CApCD;;AAuCA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,gBAAgB,EAAC;AACbI,IAAAA,IAAI,EAAC,CADQ;AAEbC,IAAAA,eAAe,EAAC;AAFH,GADY;AAK7BJ,EAAAA,SAAS,EAAC;AACNK,IAAAA,OAAO,EAAC,EADF;AAENC,IAAAA,UAAU,EAAC;AAFL,GALmB;AAS7BC,EAAAA,UAAU,EAAC;AACPC,IAAAA,QAAQ,EAAC,EADF;AAEPC,IAAAA,KAAK,EAAC;AAFC,GATkB;AAa7BC,EAAAA,mBAAmB,EAAC;AAClBC,IAAAA,iBAAiB,EAAC,CADA;AAElBC,IAAAA,iBAAiB,EAAE;AAFD;AAbS,CAAlB,CAAf;AAmBA,eAAe7B,UAAf","sourcesContent":["import React,{ useState, useCallback, useEffect} from 'react';\nimport { View, StyleSheet, ScrollView,Text } from 'react-native';\n//import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { registerUser, loginUser,clearAuthError } from '../../store/actions';\nimport { useFocusEffect } from '@react-navigation/native'\n\n\n\n\nconst AuthScreen = () =>{\n    const dispatch = useDispatch();\n/*\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const userLogin = useSelector((state) => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n*/\n    \n\n\n    const error = useSelector(state => state.auth.error )\n    const [formType, setFormType] = useState(true)\n    const [ securEntry,setSecurEntry] = useState(true);\n    const [loading, setLoading] = useState(false)\n\n    const handleSubmit = (values) => {\n        setLoading(true)\n        if(formType){\n            // register\n            dispatch(registerUser(values));\n        } else {\n            // sign in\n            dispatch(loginUser(values))\n        }\n    }\n\n    return (\n        <View>\n            <ScrollView contentContainerStyle={styles.contentContainer}>\n            <View style={styles.container}>\n                \n            </View>\n        </ScrollView>\n        </View>\n    )\n} \n\n\nconst styles = StyleSheet.create({\n    contentContainer:{\n        flex:1,\n        backgroundColor:\"tomato\"\n    },\n    container:{\n        padding:50,\n        alignItems:'center'\n    },\n    inputStyle:{\n        fontSize:15,\n        color:\"white\"\n    },\n    inputContainerStyle:{\n      borderBottomWidth:3,\n      borderBottomColor: \"black\"\n    }\n})\n\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}