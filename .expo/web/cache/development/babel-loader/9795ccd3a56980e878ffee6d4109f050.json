{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\SignInScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { login } from \"../actions/userActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\nimport * as RootNavigation from \"../RootNavigation\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var context = useContext(AuthGlobal);\n  var dispatch = useDispatch();\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var loading = userLogin.loading,\n      error = userLogin.error,\n      userInfo = userLogin.userInfo;\n  useEffect(function () {\n    console.log(\"context\", context);\n  }, [userInfo]);\n\n  var handleSubmit = function handleSubmit(e) {\n    var today, dateTime, userMail;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            today = new Date();\n            dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            userMail = \"\";\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(dispatch(login(email, password)));\n\n          case 6:\n            console.log(navigationRef);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(\"err\");\n\n          case 12:\n            if (userInfo) {\n              console.log(\"running\");\n              navigation.navigate(\"HomeTab\", {\n                screen: 'HomeTab'\n              });\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 9]], Promise);\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 110,\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Login To Download\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"email\",\n    placeholderTextColor: \"#E1E1E1\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"password\",\n    placeholderTextColor: \"#E1E1E1\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.underButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Didnt have account! Register\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    width: 190,\n    height: 65,\n    borderRadius: 50,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 40,\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 24\n  },\n  underButton: {\n    marginTop: 15,\n    color: \"white\",\n    textDecorationLine: \"underline\"\n  },\n  textInput: {\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    width: 330,\n    height: 45,\n    marginBottom: 30,\n    color: \"white\"\n  },\n  form: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/SignInScreen.js"],"names":["React","useEffect","useState","useContext","useNavigation","useDispatch","useSelector","KeyboardAwareScrollView","login","AuthGlobal","RootNavigation","SignInScreen","navigation","context","dispatch","userLogin","state","loading","error","userInfo","console","log","handleSubmit","e","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","userMail","email","password","navigationRef","navigate","screen","setEmail","setPassword","styles","container","alignItems","loginText","form","textInput","text","button","buttonText","underButton","StyleSheet","create","flex","backgroundColor","justifyContent","width","height","borderRadius","marginTop","color","fontSize","fontWeight","textDecorationLine","borderBottomColor","borderBottomWidth","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;;;;;AAYA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AAEA,SAASC,KAAT;AACA,OAAOC,UAAP;AAEA,OAAO,KAAKC,cAAZ;AAEA,eAAe,SAASC,YAAT,OAAsC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACnD,MAAMC,OAAO,GAAGV,UAAU,CAACM,UAAD,CAA1B;AAEA,MAAMK,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,SAAS,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACD,SAAjB;AAAA,GAAD,CAA7B;AAJmD,MAK3CE,OAL2C,GAKdF,SALc,CAK3CE,OAL2C;AAAA,MAKlCC,KALkC,GAKdH,SALc,CAKlCG,KALkC;AAAA,MAK3BC,QAL2B,GAKdJ,SALc,CAK3BI,QAL2B;AAQnDlB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBR,OAAtB;AAOD,GARQ,EAQP,CAACM,QAAD,CARO,CAAT;;AAUA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGfC,YAAAA,KAHe,GAGP,IAAIC,IAAJ,EAHO;AAIfC,YAAAA,QAJe,GAIJF,KAAK,CAACG,WAAN,KAAsB,GAAtB,IAA6BH,KAAK,CAACI,QAAN,KAAmB,CAAhD,IAAqD,GAArD,GAA2DJ,KAAK,CAACK,OAAN,EAA3D,GAA6E,GAA7E,GAAmFL,KAAK,CAACM,QAAN,EAAnF,GAAsG,GAAtG,GAA4GN,KAAK,CAACO,UAAN,EAA5G,GAAiI,GAAjI,GAAuIP,KAAK,CAACQ,UAAN,EAJnI;AAKfC,YAAAA,QALe,GAKJ,EALI;AAAA;AAAA;AAAA,6CAQbnB,QAAQ,CAACN,KAAK,CAAC0B,KAAD,EAAOC,QAAP,CAAN,CARK;;AAAA;AASnBf,YAAAA,OAAO,CAACC,GAAR,CAAYe,aAAZ;AATmB;AAAA;;AAAA;AAAA;AAAA;AAWjBhB,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AAXiB;AAanB,gBAAGF,QAAH,EAAa;AAEXC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,cAAAA,UAAU,CAACyB,QAAX,CAAoB,SAApB,EAA8B;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAA9B;AAGD;;AAnBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAlBmD,kBAuCzBpC,QAAQ,CAAC,EAAD,CAvCiB;AAAA;AAAA,MAuC5CgC,KAvC4C;AAAA,MAuCrCK,QAvCqC;;AAAA,mBAwCnBrC,QAAQ,CAAC,EAAD,CAxCW;AAAA;AAAA,MAwC5CiC,QAxC4C;AAAA,MAwClCK,WAxCkC;;AA0CnD,SACE,oBAAC,uBAAD;AACE,IAAA,iBAAiB,EAAE,GADrB;AAEE,IAAA,qBAAqB,EAAEC,MAAM,CAACC,SAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAC,MADjB;AAEE,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAFhB;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,oBAAoB,EAAC,SAJvB;AAKE,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIR,QAAQ,CAACQ,IAAD,CAAZ;AAAA,KALpB;AAME,IAAA,KAAK,EAAEb,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEO,MAAM,CAACK,SADhB;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,oBAAoB,EAAC,SAHvB;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIP,WAAW,CAACO,IAAD,CAAf;AAAA,KANpB;AAOE,IAAA,KAAK,EAAEZ,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAkBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEM,MAAM,CAACO,MAAhC;AAAwC,IAAA,OAAO,EAAE1B,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAlBF,EAqBE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbrC,MAAAA,UAAU,CAACyB,QAAX,CAAoB,QAApB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CArBF,CAFF,CAJF,CADF;AAuCD;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTX,IAAAA,UAAU,EAAE,QAHH;AAITY,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINJ,IAAAA,eAAe,EAAE,QAJX;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNZ,IAAAA,UAAU,EAAE,QANN;AAONgB,IAAAA,SAAS,EAAE;AAPL,GAPuB;AAgB/Bf,EAAAA,SAAS,EAAC;AACRgB,IAAAA,KAAK,EAAC,OADE;AAERC,IAAAA,QAAQ,EAAC,EAFD;AAGRC,IAAAA,UAAU,EAAC;AAHH,GAhBqB;AAqB/Bb,EAAAA,UAAU,EAAE;AACVW,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GArBmB;AAyB/BX,EAAAA,WAAW,EAAE;AACXS,IAAAA,SAAS,EAAE,EADA;AAEXC,IAAAA,KAAK,EAAE,OAFI;AAGXG,IAAAA,kBAAkB,EAAE;AAHT,GAzBkB;AA8B/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,iBAAiB,EAAE,OADV;AAETC,IAAAA,iBAAiB,EAAE,CAFV;AAGTT,IAAAA,KAAK,EAAE,GAHE;AAITC,IAAAA,MAAM,EAAE,EAJC;AAKTS,IAAAA,YAAY,EAAE,EALL;AAMTN,IAAAA,KAAK,EAAE;AANE,GA9BoB;AAsC/Bf,EAAAA,IAAI,EAAE;AACJU,IAAAA,cAAc,EAAE,QADZ;AAEJZ,IAAAA,UAAU,EAAE,QAFR;AAGJgB,IAAAA,SAAS,EAAE;AAHP;AAtCyB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  Button,\r\n  StyleSheet,\r\n  SafeAreaView\r\n} from \"react-native\";\r\n//import { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n//import axios from \"axios\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n//import { firebase,firebaseLoggedInDetail,firebaseUsers } from \"../components/Firebase/firebase\";\r\nimport { login } from \"../actions/userActions\"\r\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\r\n//import { navigationRef } from \"../RootNavigation\";\r\nimport * as RootNavigation from \"../RootNavigation\";\r\n \r\nexport default function SignInScreen({ navigation }) {\r\n  const context = useContext(AuthGlobal)\r\n  //const navigation = useNavigation();\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  //console.log(userLogin)\r\n\r\n  useEffect(() => {\r\n    console.log(\"context\",context)\r\n    //console.log(userInfo)\r\n    /*\r\n    if(userInfo) {\r\n      navigation.navigate(\"Home\")\r\n    }\r\n     */\r\n  },[userInfo])\r\n\r\n  const handleSubmit = async (e) => {\r\n    //const loginToken;\r\n    //const loginId;\r\n    let today = new Date();\r\n    let dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    let userMail = \"\";\r\n    //e.preventDefault()\r\n    try {\r\n    await dispatch(login(email,password))\r\n    console.log(navigationRef)\r\n    } catch (err) {\r\n      console.log(\"err\")\r\n    }\r\n    if(userInfo) {\r\n      //setuserInfo(userInfo)\r\n      console.log(\"running\")\r\n      navigation.navigate(\"HomeTab\",{ screen: 'HomeTab'})\r\n      //navigation.navigate(\"SignUp\")\r\n      //console.log(userInfo)\r\n    }\r\n  };\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  return (\r\n    <KeyboardAwareScrollView\r\n      extraScrollHeight={110}\r\n      contentContainerStyle={styles.container}\r\n    >\r\n      <SafeAreaView style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.loginText}>Login To Download</Text>\r\n        <View style={styles.form}>\r\n          <TextInput\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            placeholder=\"email\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            onChangeText={text => setEmail(text)}\r\n            value={email}\r\n          />\r\n          <TextInput\r\n            style={styles.textInput}\r\n            placeholder=\"password\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={text => setPassword(text)}\r\n            value={password}\r\n          />\r\n          <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"SignUp\");\r\n            }}\r\n          >\r\n            <Text style={styles.underButton}>Didnt have account! Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  button: {\r\n    width: 190,\r\n    height: 65,\r\n    borderRadius: 50,\r\n    backgroundColor: \"tomato\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  },\r\n  loginText:{\r\n    color:\"white\",\r\n    fontSize:40,\r\n    fontWeight:\"bold\"\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  underButton: {\r\n    marginTop: 15,\r\n    color: \"white\",\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  textInput: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    width: 330,\r\n    height: 45,\r\n    marginBottom: 30,\r\n    color: \"white\"\r\n  },\r\n  form: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}