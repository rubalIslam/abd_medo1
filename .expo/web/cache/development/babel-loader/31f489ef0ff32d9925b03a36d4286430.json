{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from \"./reducers/orderReducers\";\nvar reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nvar cartItemsFromStorage = AsyncStorage.getItem('cartItems') ? JSON.parse(AsyncStorage.getItem('cartItems')) : [];\nvar userInfoFromStorage = AsyncStorage.getItem('userInfo') ? JSON.parse(AsyncStorage.getItem('userInfo')) : null;\nvar shippingAddressFromStorage = AsyncStorage.getItem('shippingAddress') ? JSON.parse(AsyncStorage.getItem('shippingAddress')) : {};\nvar initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar middleware = [thunk];\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","AsyncStorage","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,EAOEC,sBAPF;AASA,SAASC,WAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,kBALF,EAMEC,gBANF;AASA,IAAMC,OAAO,GAAG1B,eAAe,CAAC;AAC9B2B,EAAAA,WAAW,EAAEvB,kBADiB;AAE9BwB,EAAAA,cAAc,EAAEvB,qBAFc;AAG9BwB,EAAAA,aAAa,EAAEvB,oBAHe;AAI9BwB,EAAAA,aAAa,EAAEvB,oBAJe;AAK9BwB,EAAAA,aAAa,EAAEvB,oBALe;AAM9BwB,EAAAA,mBAAmB,EAAEvB,0BANS;AAO9BwB,EAAAA,eAAe,EAAEvB,sBAPa;AAQ9BwB,EAAAA,IAAI,EAAEvB,WARwB;AAS9BwB,EAAAA,SAAS,EAAEtB,gBATmB;AAU9BuB,EAAAA,YAAY,EAAEtB,mBAVgB;AAW9BuB,EAAAA,WAAW,EAAEtB,kBAXiB;AAY9BuB,EAAAA,iBAAiB,EAAEtB,wBAZW;AAa9BuB,EAAAA,QAAQ,EAAEtB,eAboB;AAc9BuB,EAAAA,UAAU,EAAEtB,iBAdkB;AAe9BuB,EAAAA,UAAU,EAAEtB,iBAfkB;AAgB9BuB,EAAAA,WAAW,EAAEtB,kBAhBiB;AAiB9BuB,EAAAA,YAAY,EAAEtB,mBAjBgB;AAkB9BuB,EAAAA,QAAQ,EAAEtB,eAlBoB;AAmB9BuB,EAAAA,YAAY,EAAEtB,mBAnBgB;AAoB9BuB,EAAAA,WAAW,EAAEtB,kBApBiB;AAqB9BuB,EAAAA,SAAS,EAAEtB;AArBmB,CAAD,CAA/B;AA4BA,IAAMuB,oBAAoB,GAAGpC,YAAY,CAACqC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWvC,YAAY,CAACqC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAQA,IAAMG,mBAAmB,GAAGxC,YAAY,CAACqC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWvC,YAAY,CAACqC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAQA,IAAMI,0BAA0B,GAAGzC,YAAY,CAACqC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWvC,YAAY,CAACqC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,IAAMK,YAAY,GAAG;AACnBpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,SAAS,EAAEP,oBADP;AAEJQ,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBlB,EAAAA,SAAS,EAAE;AAAEsB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,IAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,IAAMyD,KAAK,GAAG5D,WAAW,CACvB2B,OADuB,EAEvB4B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,MAAf,SAAmByD,UAAnB,CAAD,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n/*\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n*/\nconst cartItemsFromStorage = AsyncStorage.getItem('cartItems')\n? JSON.parse(AsyncStorage.getItem('cartItems'))\n: []\n/*\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n*/\nconst userInfoFromStorage = AsyncStorage.getItem('userInfo')\n  ? JSON.parse(AsyncStorage.getItem('userInfo'))\n  : null\n/*\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n*/\nconst shippingAddressFromStorage = AsyncStorage.getItem('shippingAddress')\n  ? JSON.parse(AsyncStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}