{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\MyApp.js\";\n\nimport React, { Component, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport AuthScreen from \"./components/auth\";\nimport { Stack, HomeStack, VideosStack, screenOptions } from \"./routes/stacks\";\nimport VideoScreen from \"./components/home/videos\";\nimport HomeScreen from \"./components/home/articles\";\nvar Drawer = createDrawerNavigator();\n\nvar MainDrawer = function MainDrawer() {\n  return React.createElement(Drawer.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Videos\",\n    component: VideosStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar MyApp = function MyApp() {\n  var _useState = useState(\"true\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      auth = _useState2[0],\n      setAuth = _useState2[1];\n\n  return React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, auth == \"true\" ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainDrawer,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  })) : React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"AuthScreen\",\n    component: AuthScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(MyApp);","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/MyApp.js"],"names":["React","Component","useState","connect","NavigationContainer","createStackNavigator","createDrawerNavigator","AuthScreen","Stack","HomeStack","VideosStack","screenOptions","VideoScreen","HomeScreen","Drawer","MainDrawer","MyApp","auth","setAuth","headerShown","mapStateToProps","state"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,UAAP;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,aAAxC;AAEA,OAAOC,WAAP;AACA,OAAOC,UAAP;AAGA,IAAMC,MAAM,GAAGR,qBAAqB,EAApC;;AAGA,IAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA,SACf,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEN,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAEC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADe;AAAA,CAAnB;;AASA,IAAMM,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBAESd,QAAQ,CAAC,MAAD,CAFjB;AAAA;AAAA,MAETe,IAFS;AAAA,MAEHC,OAFG;;AAIZ,SAEI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,IAAI,IAAI,MAAR,GACI,0CACI,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAEF,UAFf;AAGI,IAAA,OAAO,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,GASQ,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,OAAO,EAAE;AAAEA,MAAAA,WAAW,EAAE;AAAf,KADb;AAEI,IAAA,IAAI,EAAC,YAFT;AAGI,IAAA,SAAS,EAAEZ,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXhB,CAFJ;AAuBP,CA3BD;;AA6BA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AAAd,GAAL;AAAA,CAA7B;;AACA,eAAed,OAAO,CAACiB,eAAD,CAAP,CAAyBJ,KAAzB,CAAf","sourcesContent":["//import 'react-native-gesture-handler';\r\nimport React, { Component, useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport AuthScreen from './components/auth';\r\n//import ProfileScreen from './components/user/profile/profile';\r\nimport { Stack, HomeStack, VideosStack, screenOptions } from './routes/stacks';\r\n\r\nimport VideoScreen from './components/home/videos';\r\nimport HomeScreen from './components/home/articles';\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n//const Stack = createStackNavigator();\r\n\r\nconst MainDrawer = () => (\r\n    <Drawer.Navigator\r\n    >\r\n        <Drawer.Screen name=\"Home\" component={HomeStack}/>\r\n        <Drawer.Screen name=\"Videos\" component={VideosStack}/>\r\n   \r\n    </Drawer.Navigator>\r\n)\r\n\r\nconst MyApp = () => {\r\n   \r\n    const [auth, setAuth ] = useState(\"true\")\r\n\r\n        return (\r\n\r\n            <Stack.Navigator>\r\n                {\r\n                    auth == \"true\" ? (\r\n                        <>\r\n                            <Stack.Screen\r\n                                name=\"Main\"\r\n                                component={MainDrawer}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                            <Stack.Screen\r\n                                options={{ headerShown: false }}\r\n                                name=\"AuthScreen\"\r\n                                component={AuthScreen}\r\n                            />\r\n\r\n                        )\r\n                }\r\n            </Stack.Navigator>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth })\r\nexport default connect(mapStateToProps)(MyApp);\r\n\r\n"]},"metadata":{},"sourceType":"module"}