{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\SignInScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { login } from \"../actions/userActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\nimport * as RootNavigation from \"../RootNavigation\";\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tried = _useState6[0],\n      setTried = _useState6[1];\n\n  var dispatch = useDispatch();\n  var userLogin = useSelector(function (state) {\n    return state.userLogin;\n  });\n  var loading = userLogin.loading,\n      error = userLogin.error,\n      userInfo = userLogin.userInfo;\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error1 = _useState8[0],\n      setError1 = _useState8[1];\n\n  useEffect(function () {\n    console.log(\"context\", context);\n  }, [userInfo]);\n\n  var handleSubmit = function handleSubmit(e) {\n    var today, dateTime, userMail, i;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            today = new Date();\n            dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n            userMail = \"\";\n            i = 1;\n\n            if (email === \"\" || password === \"\") {\n              setError1(\"Email or password cannot be empty\");\n            } else {\n              setError1(\"Trying to Login...\");\n            }\n\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(dispatch(login(email, password)));\n\n          case 8:\n            try {\n              navigation.navigate(\"HomeTab\", {\n                screen: 'HomeTab'\n              });\n            } catch (e) {\n              setError1(\"Cannot login as Admin, Go to AdminLogin Page\");\n            }\n\n            console.log(error);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(\"err\");\n            setError1(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    extraScrollHeight: 110,\n    contentContainerStyle: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Login As User\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    autoCapitalize: \"none\",\n    style: styles.textInput,\n    placeholder: \"email\",\n    placeholderTextColor: \"#E1E1E1\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"password\",\n    placeholderTextColor: \"#E1E1E1\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), error ? React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, error) : null, error1 ? React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, error1) : null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"SignUpScreen\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.underButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Didnt have account! Register\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Welcome\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.underButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"You're an Admin Login as Admin\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  button: {\n    width: 190,\n    height: 65,\n    borderRadius: 50,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  loginText: {\n    color: \"white\",\n    fontSize: 40,\n    fontWeight: \"bold\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 24\n  },\n  underButton: {\n    marginTop: 15,\n    color: \"white\",\n    textDecorationLine: \"underline\"\n  },\n  textInput: {\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    width: 330,\n    height: 45,\n    marginBottom: 30,\n    color: \"white\"\n  },\n  form: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/SignInScreen.js"],"names":["React","useEffect","useState","useContext","useNavigation","useDispatch","useSelector","KeyboardAwareScrollView","login","AuthGlobal","RootNavigation","SignInScreen","navigation","context","email","setEmail","password","setPassword","tried","setTried","dispatch","userLogin","state","loading","error","userInfo","error1","setError1","console","log","handleSubmit","e","today","Date","dateTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","userMail","i","navigate","screen","styles","container","alignItems","loginText","form","textInput","text","color","button","buttonText","underButton","StyleSheet","create","flex","backgroundColor","justifyContent","width","height","borderRadius","marginTop","fontSize","fontWeight","textDecorationLine","borderBottomColor","borderBottomWidth","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Button,\r\n  StyleSheet,\r\n  SafeAreaView\r\n} from \"react-native\";\r\n//import { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n//import axios from \"axios\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n//import { firebase,firebaseLoggedInDetail,firebaseUsers } from \"../components/Firebase/firebase\";\r\nimport { login } from \"../actions/userActions\"\r\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\r\n//import { navigationRef } from \"../RootNavigation\";\r\nimport * as RootNavigation from \"../RootNavigation\";\r\n \r\nexport default function SignInScreen({ navigation }) {\r\n  const context = useContext(AuthGlobal)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [tried,setTried] = useState(1)\r\n  //const navigation = useNavigation();\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  const [error1,setError1] = useState(\"\");\r\n  //console.log(userLogin)\r\n\r\n  useEffect(() => {\r\n    console.log(\"context\",context)\r\n    //console.log(userInfo)\r\n    /*\r\n    if(userInfo) {\r\n      navigation.navigate(\"Home\")\r\n    }\r\n     */\r\n  },[userInfo])\r\n\r\n  const handleSubmit = async (e) => {\r\n    //const loginToken;\r\n    //const loginId;\r\n    let today = new Date();\r\n    let dateTime = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate() + \" \" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    let userMail = \"\";\r\n    let i=1;\r\n    //e.preventDefault()\r\n    if (email === \"\" || password === \"\"){\r\n      setError1(\"Email or password cannot be empty\")\r\n    }else{\r\n      setError1(\"Trying to Login...\")\r\n    }\r\n    try {\r\n      await dispatch(login(email,password))\r\n      try{\r\n        navigation.navigate(\"HomeTab\",{ screen: 'HomeTab'})\r\n      }catch(e){\r\n        setError1(\"Cannot login as Admin, Go to AdminLogin Page\")\r\n      }\r\n      //navigation.navigate(\"HomeTab\",{ screen: 'HomeTab'})\r\n      console.log(error)\r\n    } catch (err) {\r\n      //alert(err)\r\n      console.log(\"err\")\r\n      //navigation.navigate(\"HomeTab\",{ screen: 'HomeTab'})\r\n      setError1(err)\r\n    }\r\n    /*if(userInfo[\"email\"]) {\r\n      //setuserInfo(userInfo)\r\n      //navigation.navigate(\"HomeTab\",{ screen: 'HomeTab'})\r\n      //navigation.navigate(\"AdminTab\",{ screen: 'UserListTab'})\r\n      console.log(\"running\")\r\n      //navigation.navigate(\"SignUp\")\r\n      //console.log(userInfo)\r\n    }else{\r\n      setTried(i)\r\n      i++\r\n    }*/\r\n  };\r\n \r\n  \r\n  return (\r\n    <KeyboardAwareScrollView\r\n      extraScrollHeight={110}\r\n      contentContainerStyle={styles.container}\r\n    >\r\n      <SafeAreaView style={{ alignItems: \"center\" }}>\r\n        <Text style={styles.loginText}>Login As User</Text>\r\n        <View style={styles.form}>\r\n          <TextInput\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            placeholder=\"email\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            onChangeText={text => setEmail(text)}\r\n            value={email}\r\n          />\r\n          <TextInput\r\n            style={styles.textInput}\r\n            placeholder=\"password\"\r\n            placeholderTextColor=\"#E1E1E1\"\r\n            secureTextEntry={true}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={text => setPassword(text)}\r\n            value={password}\r\n          />\r\n          {\r\n            error ?\r\n              <Text style={{color:\"red\"}}>{error}</Text>:null\r\n          }\r\n          {\r\n            error1 ?\r\n              <Text style={{color:\"red\"}}>{error1}</Text>:null\r\n          }\r\n          <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"SignUpScreen\");\r\n            }}\r\n          >\r\n            <Text style={styles.underButton}>Didnt have account! Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"Welcome\");\r\n            }}\r\n          >\r\n            <Text style={styles.underButton}>You're an Admin Login as Admin</Text>\r\n          </TouchableOpacity>\r\n      </SafeAreaView>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  button: {\r\n    width: 190,\r\n    height: 65,\r\n    borderRadius: 50,\r\n    backgroundColor: \"tomato\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  },\r\n  loginText:{\r\n    color:\"white\",\r\n    fontSize:40,\r\n    fontWeight:\"bold\"\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 24\r\n  },\r\n  underButton: {\r\n    marginTop: 15,\r\n    color: \"white\",\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  textInput: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    width: 330,\r\n    height: 45,\r\n    marginBottom: 30,\r\n    color: \"white\"\r\n  },\r\n  form: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}