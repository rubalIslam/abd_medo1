{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactproj\\\\abc_medo1\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function HomeScreen(_ref) {\n  var _this = this;\n\n  var setToken = _ref.setToken,\n      setId = _ref.setId,\n      setName = _ref.setName;\n  var navigation = useNavigation();\n  var userInfo = AsyncStorage.getItem(\"userInfo\");\n  console.log(userInfo);\n\n  var handleAsync = function handleAsync() {\n    _this.props.navigation.navigate(\"LoginScreen\");\n\n    AsyncStorage.removeItem(\"userInfo\");\n    console.log(JSON.parse(userInfo));\n    console.log(\"props\", _this.props.navigation);\n  };\n\n  return React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"black\",\n      paddingTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"HomeScreen\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleAsync,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"clear async\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: \"center\"\n  },\n  pageImage: {\n    textAlign: \"left\",\n    width: 400,\n    height: 500,\n    resizeMode: 'contain',\n    paddingRight: 20,\n    margin: 0\n  },\n  button: {\n    width: 390,\n    height: 45,\n    margin: 0,\n    padding: 0,\n    borderRadius: 5,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  image: {\n    height: 140,\n    width: 140,\n    borderRadius: 70,\n    borderWidth: 2,\n    borderColor: \"#F35960\"\n  },\n  textInput: {\n    borderBottomColor: \"#F35960\",\n    borderBottomWidth: 1,\n    height: 45,\n    width: \"80%\",\n    paddingLeft: 15,\n    marginVertical: 20,\n    marginHorizontal: \"10%\"\n  },\n  textArea: {\n    borderWidth: 1,\n    borderColor: \"#F35960\",\n    width: \"80%\",\n    height: 80,\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    textAlignVertical: \"top\",\n    marginBottom: 20,\n    marginHorizontal: \"10%\",\n    borderRadius: 5\n  },\n  updateButton: {\n    width: 150,\n    height: 55,\n    borderRadius: 50,\n    borderWidth: 1,\n    borderColor: \"#F35960\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  logoutButton: {\n    width: 150,\n    height: 55,\n    borderRadius: 50,\n    backgroundColor: \"#F35960\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  logoutButtonText: {\n    color: \"white\"\n  },\n  updateButtonText: {\n    color: \"#F35960\"\n  }\n});","map":{"version":3,"sources":["E:/reactproj/abc_medo1/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","useState","useCallback","useRoute","useNavigation","AsyncStorage","HomeScreen","setToken","setId","setName","navigation","userInfo","getItem","console","log","handleAsync","props","navigate","removeItem","JSON","parse","backgroundColor","paddingTop","color","styles","button","buttonText","StyleSheet","create","container","padding","alignItems","pageImage","textAlign","width","height","resizeMode","paddingRight","margin","borderRadius","justifyContent","marginTop","image","borderWidth","borderColor","textInput","borderBottomColor","borderBottomWidth","paddingLeft","marginVertical","marginHorizontal","textArea","paddingHorizontal","textAlignVertical","marginBottom","updateButton","logoutButton","logoutButtonText","updateButtonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator,\r\n    StyleSheet,\r\n    ScrollView,\r\n    TextInput,\r\n    Button\r\n} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nexport default function HomeScreen({ setToken, setId, setName }) {\r\n    const navigation = useNavigation();\r\n\r\n    const userInfo = AsyncStorage.getItem(\"userInfo\");\r\n    console.log(userInfo)\r\n\r\n    const handleAsync = () => {\r\n        this.props.navigation.navigate(\"LoginScreen\")\r\n        AsyncStorage.removeItem(\"userInfo\")\r\n        console.log(JSON.parse(userInfo))\r\n        console.log(\"props\",this.props.navigation)\r\n    }\r\n    \r\n\r\n    return (\r\n        <ScrollView style={{backgroundColor:\"black\",paddingTop:40}}>\r\n            {/*<Button title=\"sign out\" onPress={handleSubmit}\r\n        />*/}\r\n            <Text style={{color:\"white\"}}>HomeScreen</Text>\r\n            <TouchableOpacity style={styles.button} \r\n                onPress={handleAsync}>\r\n                <Text style={styles.buttonText}>clear async</Text>\r\n            </TouchableOpacity>\r\n        </ScrollView>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 20,\r\n        alignItems: \"center\"\r\n        // flex: 1\r\n    },\r\n    pageImage: {\r\n        //flex: 1,\r\n        textAlign:\"left\",\r\n        width: 400,\r\n        height: 500,\r\n        resizeMode: 'contain',\r\n        paddingRight: 20,\r\n        margin: 0\r\n    },\r\n    button: {\r\n        width: 390,\r\n        height: 45,\r\n        margin: 0,\r\n        padding: 0,\r\n        borderRadius: 5,\r\n        backgroundColor: \"tomato\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 50\r\n    },\r\n    image: {\r\n        height: 140,\r\n        width: 140,\r\n        borderRadius: 70,\r\n        borderWidth: 2,\r\n        borderColor: \"#F35960\"\r\n    },\r\n    textInput: {\r\n        borderBottomColor: \"#F35960\",\r\n        borderBottomWidth: 1,\r\n        height: 45,\r\n        width: \"80%\",\r\n        paddingLeft: 15,\r\n        marginVertical: 20,\r\n        marginHorizontal: \"10%\"\r\n    },\r\n    textArea: {\r\n        borderWidth: 1,\r\n        borderColor: \"#F35960\",\r\n        width: \"80%\",\r\n        height: 80,\r\n        paddingHorizontal: 15,\r\n        paddingTop: 15,\r\n        textAlignVertical: \"top\",\r\n        marginBottom: 20,\r\n        marginHorizontal: \"10%\",\r\n        borderRadius: 5\r\n    },\r\n    updateButton: {\r\n        width: 150,\r\n        height: 55,\r\n        borderRadius: 50,\r\n        borderWidth: 1,\r\n        borderColor: \"#F35960\",\r\n        backgroundColor: \"white\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 30\r\n    },\r\n    logoutButton: {\r\n        width: 150,\r\n        height: 55,\r\n        borderRadius: 50,\r\n        backgroundColor: \"#F35960\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 30\r\n    },\r\n    logoutButtonText: {\r\n        color: \"white\"\r\n    },\r\n    updateButtonText: {\r\n        color: \"#F35960\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}